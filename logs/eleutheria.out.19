------------------------------------------
Setting up environment variables
---
LD_LIBRARY_PATH is /ldcg/matlab_r2011a/runtime/glnxa64:/ldcg/matlab_r2011a/sys/os/glnxa64:/ldcg/matlab_r2011a/bin/glnxa64:/ldcg/matlab_r2011a/extern/lib/glnxa64:/ldcg/matlab_r2011a/sys/java/jre/glnxa64/jre/lib/amd64/native_threads:/ldcg/matlab_r2011a/sys/java/jre/glnxa64/jre/lib/amd64/server:/ldcg/matlab_r2011a/sys/java/jre/glnxa64/jre/lib/amd64:/ldcg/matlab_r2011a/sys/opengl/lib/glnxa64:/opt/lscsoft/lalstochastic/lib64:/opt/lscsoft/lalpulsar/lib64:/opt/lscsoft/lalburst/lib64:/opt/lscsoft/lalinspiral/lib64:/opt/lscsoft/lalxml/lib64:/opt/lscsoft/lalmetaio/lib64:/opt/lscsoft/lalframe/lib64:/opt/lscsoft/lal/lib64:/opt/lscsoft/glue/lib64/python2.4/site-packages:/opt/lscsoft/libframe/lib64:/opt/lscsoft/libmetaio/lib64:/opt/lscsoft/ldas-tools/lib64:/opt/lscsoft/dol/lib64:/opt/lscsoft/root/lib:/opt/lscsoft/root/lib/5.26:/opt/vdt/globus/lib:/ligotools/lib
Warning: No display specified.  You will not be able to display graphics on the screen.
Beginning science segment ...1
A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931218886

   931218816

   931219910

   931219910

        1024

        1094

   931219398

   931219328

   512

   582

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 30,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialMICH at 106
  In eleutheria>windower at 31
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 46,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialMICH at 106
  In eleutheria>windower at 31
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 49,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialMICH at 106
  In eleutheria>windower at 31
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 64,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialMICH at 106
  In eleutheria>windower at 31
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 65,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialMICH at 106
  In eleutheria>windower at 31
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 6.957410 seconds.
Sizes of frame heads being written
     1146880           1

     1146880           1

A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931218886

   931218886

   931219910

   931219910

        1024

        1024

   931219398

   931219398

   512

   512

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 30,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialPRC at 153
  In eleutheria>windower at 34
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 44,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialPRC at 153
  In eleutheria>windower at 34
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 51,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialPRC at 153
  In eleutheria>windower at 34
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 60,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialPRC at 153
  In eleutheria>windower at 34
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 65,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialPRC at 153
  In eleutheria>windower at 34
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 6.674030 seconds.
Amount of data to be written
    18874368

        1152

Calculating pre- and post-filter PSD
Elapsed time is 6.175532 seconds.

ans =

    86


ans =

     1


ans =

     1

    'Pre-filter range was 12735.9892 kpc'

    'Post-filter range is 12645.8557 kpc'

    'Improvement factor is 0.99292'

{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.initialFrameWriter at 248
  In eleutheria>windower at 39
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.initialFrameWriter at 248
  In eleutheria>windower at 39
  In eleutheria>filterer at 94
  In eleutheria at 104
Comb limit for this window

ans =

    1.2000

Values of combed points

ans =

    0.9947
    0.9958
    0.9993
    0.9953
    0.9978
    1.0025
    1.0337
  151.1323
    0.9911
    0.9992
    0.9989
    1.0012
    0.9959
    0.9961
    0.9990
    0.9990
    0.9959
    0.9905
    0.9960
    0.9962
    1.0033
    0.9986
    1.0011
    1.0006
    0.9978
    1.0047
    0.9998
    0.9998
    1.0021
    1.0011
    1.0009
    1.0004
    1.0020
    1.0006
    1.0003
    1.0001
    0.9999
    0.9999
    0.9999
    0.9998

Maximum should be Boolean

ans =

     1

success (0) or failure (1) of the data in range and comb veto tests:

ans =

     1


ans =

     1

This many frames are being written
     4

Window fails veto test.
Range veto (zero is good, one is bad)

ans =

     1

Comb veto (zero is good, one is bad)

ans =

     1

Veto alarm raised; will write baseline
Amount of data to be written
    18874368

        1152

Calculating pre- and post-filter PSD
Elapsed time is 5.024788 seconds.

ans =

    86


ans =

     1


ans =

     1

    'Pre-filter range was 12735.9892 kpc'

    'Post-filter range is 12645.8557 kpc'

    'Improvement factor is 0.99292'

{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 395
  In HoftEditor>HoftEditor.initialFrameWriter at 248
  In eleutheria>windower at 39
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 395
  In HoftEditor>HoftEditor.initialFrameWriter at 248
  In eleutheria>windower at 39
  In eleutheria>filterer at 94
  In eleutheria at 104
Comb limit for this window

ans =

    1.2000

Values of combed points

ans =

    0.9947
    0.9958
    0.9993
    0.9953
    0.9978
    1.0025
    1.0337
  151.1323
    0.9911
    0.9992
    0.9989
    1.0012
    0.9959
    0.9961
    0.9990
    0.9990
    0.9959
    0.9905
    0.9960
    0.9962
    1.0033
    0.9986
    1.0011
    1.0006
    0.9978
    1.0047
    0.9998
    0.9998
    1.0021
    1.0011
    1.0009
    1.0004
    1.0020
    1.0006
    1.0003
    1.0001
    0.9999
    0.9999
    0.9999
    0.9998

Maximum should be Boolean

ans =

     1

success (0) or failure (1) of the data in range and comb veto tests:

ans =

     1


ans =

     1

This many frames are being written
     4

HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931218816-931218944-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931218816-931218944-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931218816-931218944-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931218944-931219072-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931218944-931219072-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931218944-931219072-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219072-931219200-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219072-931219200-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219072-931219200-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219200-931219328-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219200-931219328-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219200-931219328-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
Offline ZPKs displayed below
 
Zero/pole/gain:
0
 
 
Zero/pole/gain:
 
                                                                                        
 6.4978e-16 (s-302.6) (s^2 - 4.862s + 1.096e05) (s^2 - 25.71s + 1.213e05)               
                                                                                        
         (s^2 + 7.494s + 1.786e05) (s^2 + 4.494s + 1.885e05) (s^2 - 1.734s + 2.101e05)  
                                                                                        
         (s^2 + 14.7s + 2.276e05) (s^2 + 5.127s + 2.412e05) (s^2 + 13.94s + 2.552e05)   
                                                                                        
         (s^2 - 0.7183s + 3.12e05) (s^2 - 92.75s + 3.274e05) (s^2 - 1.295s + 4.182e05)  
                                                                                        
         (s^2 - 0.9015s + 4.699e05) (s^2 + 5.357s + 4.79e05) (s^2 - 3.518s + 4.939e05)  
                                                                                        
         (s^2 + 3.369s + 7.222e05) (s^2 + 0.513s + 9.831e05) (s^2 + 3.919s + 1.324e06)  
                                                                                        
         (s^2 + 3.241s + 1.559e06) (s^2 - 0.1323s + 1.924e06) (s^2 - 16.61s + 3.067e06) 
                                                                                        
         (s^2 + 0.2734s + 3.087e06) (s^2 - 2.449s + 4.442e06) (s^2 - 78.42s + 6.871e06) 
                                                                                        
         (s^2 + 9.952s + 6.872e06) (s^2 + 4.952s + 8.954e06) (s^2 + 2231s + 1.125e07)   
                                                                                        
         (s^2 + 13.01s + 1.15e07) (s^2 - 0.4696s + 1.723e07) (s^2 - 5.676s + 1.876e07)  
                                                                                        
         (s^2 + 0.8441s + 1.89e07) (s^2 - 1.521s + 1.911e07) (s^2 - 226.2s + 2.124e07)  
                                                                                        
-----------------------------------------------------------------------------------------
                                                                                         
(s^2 + 11.92s + 1.018e05) (s^2 + 11.91s + 1.234e05) (s^2 + 0.8176s + 1.584e05)           
                                                                                         
        (s^2 + 2.452s + 1.858e05) (s^2 + 8.901s + 1.91e05) (s^2 + 3.288s + 2.116e05)     
                                                                                         
        (s^2 + 5.814s + 2.413e05) (s^2 + 11.57s + 2.51e05) (s^2 + 6.446s + 2.538e05)     
                                                                                         
        (s^2 + 1.311s + 3.144e05) (s^2 + 1.726s + 4.178e05) (s^2 + 0.03889s + 4.691e05)  
                                                                                         
        (s^2 + 0.03683s + 4.776e05) (s^2 + 0.122s + 4.865e05) (s^2 + 0.1038s + 4.951e05) 
                                                                                         
        (s^2 + 7.601s + 7.219e05) (s^2 + 1.529s + 9.839e05) (s^2 + 2.286s + 1.327e06)    
                                                                                         
        (s^2 + 4.066s + 1.565e06) (s^2 + 0.6295s + 1.926e06) (s^2 + 5.944s + 3.066e06)   
                                                                                         
        (s^2 + 1.02s + 3.084e06) (s^2 + 1.158s + 4.449e06) (s^2 + 1.387s + 6.864e06)     
                                                                                         
        (s^2 + 2.296s + 6.912e06) (s^2 + 0.3294s + 8.957e06) (s^2 + 2.544s + 1.151e07)   
                                                                                         
        (s^2 + 1.011s + 1.72e07) (s^2 + 4.099s + 1.877e07) (s^2 + 3.74s + 1.878e07)      
                                                                                         
        (s^2 + 3.906s + 1.908e07) (s^2 + 4.341s + 1.913e07) (s^2 + 6.22e04s + 1.934e09)  
                                                                                         
 
RMS errors displayered below

ans =

   2.5206e-18


ans =

   7.2516e-19

Lengths of passed DARM, MICH and PRC vrctors:
     0

     0

     0

A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931219398

   931219398

   931220215

   931220215

   817

   817

   931219910

   931219910

   305

   305

This message will display if the second subsection is doing the correct thing for DARM
Check on DARM

ans =

   1.0e-15 *

   -0.2045
   -0.2049
   -0.2054
   -0.2056
   -0.2060
   -0.2064
   -0.2067
   -0.2071
   -0.2074
   -0.2077
   -0.2080

Check on new: first three samples should be same as last above

ans =

   1.0e-15 *

   -0.2074
   -0.2077
   -0.2080
   -0.2084
   -0.2087
   -0.2090
   -0.2093
   -0.2095
   -0.2097
   -0.2100
   -0.2103
   -0.2105
   -0.2107

This message will display if the second subsection is doing the correct thing for MICH
Check on MICH

ans =

  -25.5535
  -25.2391
  -24.9174
  -24.5997
  -24.2857
  -23.9739
  -23.6598
  -23.3335
  -23.0015
  -22.6646
  -22.3254

Check on new: first three samples should be same as last above

ans =

  -23.0015
  -22.6646
  -22.3254
  -21.9947
  -21.6629
  -21.3302
  -20.9907
  -20.6410
  -20.2981
  -19.9512
  -19.5957
  -19.2506
  -18.9098

darm is this long

ans =

    13385728

vnoise is this long

ans =

    13385728

vector fitting...
{Warning: Rank deficient, rank = 29,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 44,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 48,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 63,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 64,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 5.074966 seconds.
A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931219398

   931219398

   931220215

   931220215

   817

   817

   931219910

   931219910

   305

   305

This message will display if the second subsection is doing the correct thing for PRC
Check on PRC

ans =

 -546.6322
 -547.2433
 -547.8108
 -548.3279
 -548.8221
 -549.3113
 -549.8007
 -550.3073
 -550.8393
 -551.3917
 -551.9584

Check on new: first three samples should be same as last above

ans =

 -550.8393
 -551.3917
 -551.9584
 -552.5047
 -553.0019
 -553.4791
 -553.9807
 -554.5219
 -555.0679
 -555.5696
 -556.0535
 -556.5932
 -557.1855

darm is this long

ans =

    13385728

vnoise is this long

ans =

    13385728

vector fitting...
{Warning: Rank deficient, rank = 31,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 46,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 48,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 64,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 65,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 5.003792 seconds.
Offline ZPKs displayed below
 
Zero/pole/gain:
 
                                                                                        
 -8.5819e-17 (s-3.267e04) (s-235.4) (s-61.05) (s^2 + 2.76s + 1.104e05)                  
                                                                                        
         (s^2 - 7.095s + 1.192e05) (s^2 + 38.83s + 1.564e05) (s^2 + 5.822s + 1.766e05)  
                                                                                        
         (s^2 + 3.241s + 1.916e05) (s^2 + 4.188s + 1.987e05) (s^2 + 0.3693s + 2.35e05)  
                                                                                        
         (s^2 + 1.19s + 2.507e05) (s^2 + 11.03s + 2.859e05) (s^2 - 0.5489s + 3.177e05)  
                                                                                        
         (s^2 + 24.23s + 3.514e05) (s^2 - 2.176s + 4.682e05) (s^2 + 9.576s + 4.805e05)  
                                                                                        
         (s^2 - 2.761s + 4.943e05) (s^2 - 646.5s + 9.397e05) (s^2 - 2.475s + 9.846e05)  
                                                                                        
         (s^2 - 0.532s + 1.35e06) (s^2 - 11.59s + 2.386e06) (s^2 + 3.834s + 3.064e06)   
                                                                                        
         (s^2 + 0.9301s + 3.297e06) (s^2 - 381.3s + 5.144e06) (s^2 - 10.89s + 6.608e06) 
                                                                                        
         (s^2 + 27.51s + 6.881e06) (s^2 + 3.511s + 6.988e06) (s^2 - 13.6s + 1.16e07)    
                                                                                        
         (s^2 + 5.595s + 1.418e07) (s^2 + 24.83s + 1.713e07) (s^2 - 14.96s + 1.868e07)  
                                                                                        
         (s^2 - 49.38s + 1.977e07) (s^2 - 91.1s + 2.156e07) (s^2 + 10.74s + 2.394e07)   
                                                                                        
-----------------------------------------------------------------------------------------
                                                                                         
(s^2 + 0.04867s + 1.051e05) (s^2 + 9.101s + 1.145e05) (s^2 + 0.9592s + 1.211e05)         
                                                                                         
        (s^2 + 8.06s + 1.678e05) (s^2 + 13.58s + 1.828e05) (s^2 + 0.3562s + 1.916e05)    
                                                                                         
        (s^2 + 8.462s + 2.025e05) (s^2 + 3.889s + 2.37e05) (s^2 + 3.054s + 2.521e05)     
                                                                                         
        (s^2 + 8.324s + 2.894e05) (s^2 + 0.626s + 3.182e05) (s^2 + 39.16s + 3.612e05)    
                                                                                         
        (s^2 + 0.1196s + 4.701e05) (s^2 + 0.4536s + 4.768e05) (s^2 + 0.8914s + 4.874e05) 
                                                                                         
        (s^2 + 0.8467s + 4.943e05) (s^2 + 3.777s + 9.851e05) (s^2 + 0.5059s + 1.349e06)  
                                                                                         
        (s^2 + 23.38s + 2.377e06) (s^2 + 0.2264s + 3.071e06) (s^2 + 2.643s + 3.298e06)   
                                                                                         
        (s^2 + 19.15s + 4.681e06) (s^2 + 0.4203s + 6.859e06) (s^2 + 8.342s + 6.978e06)   
                                                                                         
        (s^2 + 7.135s + 6.995e06) (s^2 + 1.483s + 1.152e07) (s^2 + 2.27s + 1.417e07)     
                                                                                         
        (s^2 + 2.068s + 1.725e07) (s^2 + 0.08352s + 1.863e07) (s^2 + 1.637s + 1.904e07)  
                                                                                         
        (s^2 + 9.404s + 2.143e07) (s^2 + 1.659s + 2.397e07) (s^2 + 6.22e04s + 1.934e09)  
                                                                                         
 
 
Zero/pole/gain:
 
                                                                                         
 1.083e-15 (s-588.7) (s^2 - 9.312s + 1.167e05) (s^2 - 12.56s + 1.286e05)                 
                                                                                         
         (s^2 + 2.921s + 1.766e05) (s^2 + 2.695s + 1.787e05) (s^2 - 7.756s + 2.053e05)   
                                                                                         
         (s^2 - 2.776s + 2.201e05) (s^2 + 3.255s + 2.439e05) (s^2 + 13.8s + 2.566e05)    
                                                                                         
         (s^2 - 75.29s + 2.812e05) (s^2 - 2.013s + 2.848e05) (s^2 - 6.237s + 3.703e05)   
                                                                                         
         (s^2 - 6.507s + 4.684e05) (s^2 + 12.29s + 4.846e05) (s^2 - 5.134s + 4.962e05)   
                                                                                         
         (s^2 + 0.01482s + 6.924e05) (s^2 + 4.914s + 9.193e05) (s^2 + 1.048s + 1.212e06) 
                                                                                         
         (s^2 + 3.015s + 1.405e06) (s^2 + 3.369s + 1.565e06) (s^2 + 0.4435s + 1.905e06)  
                                                                                         
         (s^2 + 1.458s + 3.032e06) (s^2 - 7.168s + 3.063e06) (s^2 + 0.5201s + 4.345e06)  
                                                                                         
         (s^2 + 9.752s + 6.881e06) (s^2 - 128.7s + 6.926e06) (s^2 + 37.13s + 8.729e06)   
                                                                                         
         (s^2 + 725.6s + 1.119e07) (s^2 + 16.09s + 1.323e07) (s^2 + 12.84s + 1.871e07)   
                                                                                         
         (s^2 - 30.06s + 1.886e07) (s^2 + 1.956s + 1.911e07) (s^2 - 118.1s + 1.974e07)   
                                                                                         
------------------------------------------------------------------------------------------
                                                                                          
(s^2 + 2.281s + 9.918e04) (s^2 + 4.028s + 1.221e05) (s^2 + 2.196s + 1.602e05)             
                                                                                          
        (s^2 + 0.04102s + 1.777e05) (s^2 + 10.5s + 1.932e05) (s^2 + 2.103s + 2.144e05)    
                                                                                          
        (s^2 + 8.778s + 2.414e05) (s^2 + 14.12s + 2.492e05) (s^2 + 4.582s + 2.535e05)     
                                                                                          
        (s^2 + 1.271s + 2.868e05) (s^2 + 10.26s + 3.687e05) (s^2 + 0.2525s + 4.695e05)    
                                                                                          
        (s^2 + 0.2585s + 4.771e05) (s^2 + 0.1138s + 4.869e05) (s^2 + 0.08414s + 4.949e05) 
                                                                                          
        (s^2 + 0.1783s + 6.931e05) (s^2 + 15.31s + 9.234e05) (s^2 + 8.218s + 1.215e06)    
                                                                                          
        (s^2 + 3.105s + 1.405e06) (s^2 + 5.481s + 1.572e06) (s^2 + 2.682s + 1.908e06)     
                                                                                          
        (s^2 + 12.27s + 3.036e06) (s^2 + 6.851s + 3.059e06) (s^2 + 11.82s + 4.347e06)     
                                                                                          
        (s^2 + 2.244s + 6.865e06) (s^2 + 6.841s + 6.913e06) (s^2 + 13.88s + 8.772e06)     
                                                                                          
        (s^2 + 9.346s + 1.318e07) (s^2 + 0.5902s + 1.863e07) (s^2 + 0.5816s + 1.88e07)    
                                                                                          
        (s^2 + 3.388s + 1.906e07) (s^2 + 0.5709s + 1.913e07) (s^2 + 6.22e04s + 1.934e09)  
                                                                                          
 
RMS errors are displayed below

ans =

   7.2099e-19


ans =

   5.9969e-19

Amount of data to be written
    14680064

   896

Calculating pre- and post-filter PSD
Elapsed time is 6.800616 seconds.

ans =

    86


ans =

     1


ans =

     1

    'Pre-filter range was 12995.4253 kpc'

    'Post-filter range is 12786.7798 kpc'

    'Improvement factor is 0.98394'

{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Comb limit for this window

ans =

    1.2000

Values of combed points

ans =

    0.9906
    0.9985
    1.0003
    0.9966
    0.9897
    0.9974
    1.1982
   48.8444
    1.0368
    0.9896
    0.9900
    1.0144
    0.9937
    0.9848
    1.0023
    0.9957
    0.9875
    0.9947
    1.0025
    1.0065
    0.9941
    0.9989
    1.0021
    1.0020
    0.9990
    1.0002
    0.9998
    0.9984
    0.9998
    1.0017
    1.0010
    1.0001
    0.9996
    1.0010
    0.9999
    1.0011
    1.0000
    0.9999
    0.9998
    1.0003

Maximum should be Boolean

ans =

     1

success (0) or failure (1) of the data in range and comb veto tests:

ans =

     1


ans =

     1

This many frames are being written
     4

Window fails veto test.
Range veto (zero is good, one is bad)

ans =

     1

Comb veto (zero is good, one is bad)

ans =

     1

Veto alarm raised in window; writing baseline instead of filtered data
Amount of data to be written
    14680064

   896

Calculating pre- and post-filter PSD
Elapsed time is 5.691809 seconds.

ans =

    86


ans =

     1


ans =

     1

    'Pre-filter range was 12995.4253 kpc'

    'Post-filter range is 12951.5154 kpc'

    'Improvement factor is 0.99662'

{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 392
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 392
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Comb limit for this window

ans =

    1.2000

Values of combed points

ans =

    0.9902
    0.9979
    0.9992
    0.9957
    0.9932
    1.0001
    1.0469
   40.5130
    1.0036
    0.9871
    0.9906
    1.0000
    0.9921
    0.9944
    1.0012
    0.9986
    0.9917
    0.9945
    1.0012
    1.0034
    0.9984
    0.9990
    1.0007
    1.0018
    0.9993
    1.0005
    0.9996
    0.9984
    0.9998
    1.0009
    1.0006
    0.9999
    1.0000
    1.0006
    1.0001
    1.0010
    1.0001
    0.9999
    0.9998
    1.0002

Maximum should be Boolean

ans =

     1

success (0) or failure (1) of the data in range and comb veto tests:

ans =

     1


ans =

     1

This many frames are being written
     4

HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219328-931219456-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219328-931219456-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219328-931219456-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219456-931219584-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219456-931219584-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219456-931219584-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219584-931219712-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219584-931219712-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219584-931219712-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219712-931219840-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219712-931219840-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219712-931219840-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
Lengths of passed DARM, MICH and PRC vrctors:
     0

     0

     0

A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931219910

   931219910

   931220215

   931220224

   305

   314

   931220422

   931220422

  -207

  -198

darm is this long

ans =

     4997120

vnoise is this long

ans =

     4997120

vector fitting...
{Warning: Rank deficient, rank = 29,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 44,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 48,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 63,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 64,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
      147456

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 2.028972 seconds.
Preparing to attach dangling frame after segment
A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931219910

   931219910

   931220215

   931220215

   305

   305

   931220422

   931220422

  -207

  -207

darm is this long

ans =

     4997120

vnoise is this long

ans =

     4997120

vector fitting...
{Warning: Rank deficient, rank = 31,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 45,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 51,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 59,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 63,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 1.923146 seconds.
Offline ZPKs displayed below
 
Zero/pole/gain:
 
                                                                                        
-9.1385e-16 (s-2052) (s^2 - 70.2s + 8.873e04) (s^2 + 0.1355s + 1.102e05)                
                                                                                        
        (s^2 - 1.831s + 1.205e05) (s^2 + 1.648s + 1.679e05) (s^2 - 4.711s + 1.792e05)   
                                                                                        
        (s^2 + 4.831s + 1.911e05) (s^2 + 5.276s + 2.111e05) (s^2 - 1.35s + 2.385e05)    
                                                                                        
        (s^2 - 0.006618s + 2.557e05) (s^2 + 0.418s + 3.121e05) (s^2 - 2.14s + 4.689e05) 
                                                                                        
        (s^2 + 6.902s + 4.822e05) (s^2 - 1.32s + 4.943e05) (s^2 - 3.142s + 8.403e05)    
                                                                                        
        (s^2 - 3.389s + 1.038e06) (s^2 - 9.975s + 1.336e06) (s^2 - 2.408s + 1.603e06)   
                                                                                        
        (s^2 - 2505s + 3.672e06) (s^2 - 2.82s + 2.931e06) (s^2 - 8.435s + 3.104e06)     
                                                                                        
        (s^2 - 57.21s + 4.986e06) (s^2 - 15.5s + 5.958e06) (s^2 - 66.26s + 6.895e06)    
                                                                                        
        (s^2 + 16.26s + 7e06) (s^2 - 4.59s + 9.463e06) (s^2 + 5.812s + 1.162e07)        
                                                                                        
        (s^2 - 8.176s + 1.687e07) (s^2 - 5.379s + 1.876e07) (s^2 - 4.824s + 1.909e07)   
                                                                                        
        (s^2 - 370s + 2.021e07) (s^2 - 61.66s + 2.19e07) (s^2 + 4.103s + 2.421e07)      
                                                                                        
-----------------------------------------------------------------------------------------
                                                                                         
(s^2 + 0.7447s + 1.05e05) (s^2 + 5.351s + 1.122e05) (s^2 + 1.14s + 1.212e05)             
                                                                                         
        (s^2 + 1.924s + 1.698e05) (s^2 + 0.5197s + 1.796e05) (s^2 + 0.01317s + 1.907e05) 
                                                                                         
        (s^2 + 4.003s + 2.13e05) (s^2 + 3.383s + 2.396e05) (s^2 + 2.41s + 2.572e05)      
                                                                                         
        (s^2 + 0.3865s + 3.106e05) (s^2 + 1.98s + 4.715e05) (s^2 + 2.561s + 4.762e05)    
                                                                                         
        (s^2 + 2.081s + 4.879e05) (s^2 + 1.777s + 4.945e05) (s^2 + 8.252s + 8.407e05)    
                                                                                         
        (s^2 + 5.559s + 1.04e06) (s^2 + 9.569s + 1.333e06) (s^2 + 0.5894s + 1.605e06)    
                                                                                         
        (s^2 + 1.958s + 2.934e06) (s^2 + 1.307s + 3.103e06) (s^2 + 24.28s + 4.942e06)    
                                                                                         
        (s^2 + 5.499s + 5.979e06) (s^2 + 0.9329s + 6.858e06) (s^2 + 1.057s + 7.002e06)   
                                                                                         
        (s^2 + 4.357s + 9.429e06) (s^2 + 0.6423s + 1.153e07) (s^2 + 2.401s + 1.686e07)   
                                                                                         
        (s^2 + 3.266s + 1.864e07) (s^2 + 2.012s + 1.907e07) (s^2 + 3.13s + 1.911e07)     
                                                                                         
        (s^2 + 7.069s + 2.182e07) (s^2 + 4.856s + 2.402e07) (s^2 + 6.22e04s + 1.934e09)  
                                                                                         
 
 
Zero/pole/gain:
 
                                                                                         
-1.1513e-15 (s+1.999e04) (s^2 + 1.067s + 1.087e05) (s^2 + 2.18s + 1.241e05)              
                                                                                         
        (s^2 - 2.861s + 1.66e05) (s^2 + 0.9731s + 1.899e05) (s^2 + 0.1631s + 1.934e05)   
                                                                                         
        (s^2 - 0.2482s + 2.167e05) (s^2 + 0.3889s + 2.415e05) (s^2 + 1.69s + 2.524e05)   
                                                                                         
        (s^2 - 3.369s + 2.573e05) (s^2 - 0.131s + 3.346e05) (s^2 - 2.191s + 4.688e05)    
                                                                                         
        (s^2 + 7.887s + 4.801e05) (s^2 - 0.2312s + 4.932e05) (s^2 + 0.602s + 5.076e05)   
                                                                                         
        (s^2 + 0.6899s + 8e05) (s^2 + 0.2026s + 1.036e06) (s^2 + 1.238s + 1.324e06)      
                                                                                         
        (s^2 + 0.08284s + 1.486e06) (s^2 + 0.2666s + 1.906e06) (s^2 + 2.528s + 2.834e06) 
                                                                                         
        (s^2 + 2.322s + 3.193e06) (s^2 + 13.96s + 5.025e06) (s^2 + 6.819s + 6.84e06)     
                                                                                         
        (s^2 + 4.079s + 6.92e06) (s^2 + 18.55s + 7.198e06) (s^2 - 0.3136s + 9.095e06)    
                                                                                         
        (s^2 - 1.845s + 1.156e07) (s^2 - 1.294s + 1.847e07) (s^2 - 3.7s + 1.875e07)      
                                                                                         
        (s^2 - 12.69s + 1.904e07) (s^2 + 0.3819s + 1.912e07) (s^2 - 0.07322s + 2.093e07) 
                                                                                         
-----------------------------------------------------------------------------------------
                                                                                        
(s^2 + 1.777s + 1.079e05) (s^2 + 10.06s + 1.209e05) (s^2 + 3.112s + 1.602e05)           
                                                                                        
        (s^2 + 4.215s + 1.883e05) (s^2 + 1.015s + 1.934e05) (s^2 + 0.4829s + 2.147e05)  
                                                                                        
        (s^2 + 7.79s + 2.409e05) (s^2 + 10.84s + 2.459e05) (s^2 + 2.411s + 2.524e05)    
                                                                                        
        (s^2 + 1.834s + 3.328e05) (s^2 + 1.483s + 4.714e05) (s^2 + 2.114s + 4.739e05)   
                                                                                        
        (s^2 + 6.084s + 4.899e05) (s^2 + 5.635s + 4.914e05) (s^2 + 5.346s + 5.022e05)   
                                                                                        
        (s^2 + 5.404s + 7.998e05) (s^2 + 3.08s + 1.037e06) (s^2 + 8.887s + 1.321e06)    
                                                                                        
        (s^2 + 1.299s + 1.485e06) (s^2 + 0.452s + 1.907e06) (s^2 + 21.19s + 2.884e06)   
                                                                                        
        (s^2 + 17.96s + 3.236e06) (s^2 + 6.283s + 6.863e06) (s^2 + 11.71s + 6.887e06)   
                                                                                        
        (s^2 + 7.107s + 6.946e06) (s^2 + 0.7349s + 9.095e06) (s^2 + 8.189s + 1.155e07)  
                                                                                        
        (s^2 + 2.789s + 1.847e07) (s^2 + 2.669s + 1.879e07) (s^2 + 2.147s + 1.907e07)   
                                                                                        
        (s^2 + 0.169s + 1.913e07) (s^2 + 0.7636s + 2.094e07) (s^2 + 6.22e04s + 1.934e09)
                                                                                        
 
RMS errors are displayed below

ans =

   6.5382e-19


ans =

   6.1938e-19

Continuing to attach dangling frame after segment
Amount of data to be written
     6291456

   384

Calculating pre- and post-filter PSD
Elapsed time is 2.948983 seconds.

ans =

    86


ans =

     1


ans =

     1

    'Pre-filter range was 12896.6246 kpc'

    'Post-filter range is 11701.7408 kpc'

    'Improvement factor is 0.90735'


ans =

    43


ans =

    50


ans =

     1


ans =

     1


ans =

     1

{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 377
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 377
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Comb limit for this window

ans =

    1.5548

Values of combed points

ans =

    0.9995
    1.0348
    1.0150
    1.0068
    1.0751
    1.2178
    2.4470
   13.7651
    1.4634
    1.0522
    1.1466
    1.0519
    0.9872
    1.0003
    1.0021
    1.0106
    0.9980
    1.0022
    0.9947
    1.0124
    1.0074
    0.9960
    0.9972
    1.0003
    1.0023
    1.0084
    1.0023
    0.9991
    0.9994
    0.9964
    1.0012
    0.9972
    0.9992
    0.9994
    1.0006
    1.0007
    1.0000
    0.9999
    1.0002
    1.0002

Maximum should be Boolean

ans =

     1

success (0) or failure (1) of the data in range and comb veto tests:

ans =

     1


ans =

     1

This many frames are being written
     3

Window fails veto test.
Range veto (zero is good, one is bad)

ans =

     1

Comb veto (zero is good, one is bad)

ans =

     1

Veto alarm raised in window; writing baseline instead of filtered data
Continuing to attach dangling frame after segment
Amount of data to be written
     6291456

   384

Calculating pre- and post-filter PSD
Elapsed time is 3.985967 seconds.

ans =

    86


ans =

     1


ans =

     1

    'Pre-filter range was 12896.6246 kpc'

    'Post-filter range is 12184.7519 kpc'

    'Improvement factor is 0.9448'


ans =

    43


ans =

    50


ans =

     1


ans =

     1


ans =

     1

{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 392
  In HoftEditor>HoftEditor.loopPRC at 377
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 392
  In HoftEditor>HoftEditor.loopPRC at 377
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Comb limit for this window

ans =

    1.5548

Values of combed points

ans =

    0.9994
    1.0352
    1.0090
    0.9990
    1.0402
    1.1138
    1.8057
   10.7623
    1.2149
    0.9977
    1.0757
    1.0163
    0.9768
    0.9939
    1.0008
    1.0058
    0.9970
    1.0005
    0.9960
    1.0079
    1.0041
    0.9958
    0.9984
    1.0002
    1.0014
    1.0054
    1.0013
    0.9993
    0.9993
    0.9977
    1.0009
    0.9983
    0.9994
    0.9995
    1.0004
    1.0005
    1.0000
    0.9999
    1.0001
    1.0001

Maximum should be Boolean

ans =

     1

success (0) or failure (1) of the data in range and comb veto tests:

ans =

     1


ans =

     1

This many frames are being written
     3

HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219840-931219968-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219840-931219968-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219840-931219968-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219968-931220096-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219968-931220096-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931219968-931220096-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931220096-931220224-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931220096-931220224-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9312/H-H1_AMPS_C02_L2-931220096-931220224-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
Science segment feedforward complete
Elapsed time is 30.737889 seconds.
