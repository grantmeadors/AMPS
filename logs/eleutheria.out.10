------------------------------------------
Setting up environment variables
---
LD_LIBRARY_PATH is /ldcg/matlab_r2011a/runtime/glnxa64:/ldcg/matlab_r2011a/sys/os/glnxa64:/ldcg/matlab_r2011a/bin/glnxa64:/ldcg/matlab_r2011a/extern/lib/glnxa64:/ldcg/matlab_r2011a/sys/java/jre/glnxa64/jre/lib/amd64/native_threads:/ldcg/matlab_r2011a/sys/java/jre/glnxa64/jre/lib/amd64/server:/ldcg/matlab_r2011a/sys/java/jre/glnxa64/jre/lib/amd64:/ldcg/matlab_r2011a/sys/opengl/lib/glnxa64:/opt/lscsoft/lalstochastic/lib64:/opt/lscsoft/lalpulsar/lib64:/opt/lscsoft/lalburst/lib64:/opt/lscsoft/lalinspiral/lib64:/opt/lscsoft/lalxml/lib64:/opt/lscsoft/lalmetaio/lib64:/opt/lscsoft/lalframe/lib64:/opt/lscsoft/lal/lib64:/opt/lscsoft/glue/lib64/python2.4/site-packages:/opt/lscsoft/libframe/lib64:/opt/lscsoft/libmetaio/lib64:/opt/lscsoft/ldas-tools/lib64:/opt/lscsoft/dol/lib64:/opt/lscsoft/root/lib:/opt/lscsoft/root/lib/5.26:/opt/vdt/globus/lib:/ligotools/lib
Warning: No display specified.  You will not be able to display graphics on the screen.
Beginning science segment ...1
A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931134555

   931134464

   931135579

   931135579

        1024

        1115

   931135067

   931134976

   512

   603

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 28,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialMICH at 106
  In eleutheria>windower at 31
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 39,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialMICH at 106
  In eleutheria>windower at 31
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 51,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialMICH at 106
  In eleutheria>windower at 31
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 57,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialMICH at 106
  In eleutheria>windower at 31
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 65,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialMICH at 106
  In eleutheria>windower at 31
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 65,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialMICH at 106
  In eleutheria>windower at 31
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 6.971044 seconds.
Sizes of frame heads being written
     1490944           1

     1490944           1

A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931134555

   931134555

   931135579

   931135579

        1024

        1024

   931135067

   931135067

   512

   512

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 29,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialPRC at 153
  In eleutheria>windower at 34
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 45,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialPRC at 153
  In eleutheria>windower at 34
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 47,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialPRC at 153
  In eleutheria>windower at 34
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 64,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialPRC at 153
  In eleutheria>windower at 34
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 63,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.initialPRC at 153
  In eleutheria>windower at 34
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 6.607601 seconds.
Amount of data to be written
    18874368

        1152

Calculating pre- and post-filter PSD
Elapsed time is 6.807631 seconds.

ans =

    86


ans =

     1


ans =

     1

    'Pre-filter range was 13089.7312 kpc'

    'Post-filter range is 13045.9001 kpc'

    'Improvement factor is 0.99665'

{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.initialFrameWriter at 248
  In eleutheria>windower at 39
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.initialFrameWriter at 248
  In eleutheria>windower at 39
  In eleutheria>filterer at 94
  In eleutheria at 104
Comb limit for this window

ans =

    1.2000

Values of combed points

ans =

    1.0005
    0.9977
    2.6525
    0.9947
    1.0019
    1.0003
    0.9929
    1.0007
    1.0038
    0.9884
    0.9921
    1.0032
    0.9971
    1.0008
    0.9989
    0.9979
    0.9958
    0.9950
    1.0010
    0.9995
    0.9951
    1.0021
    1.0017
    1.0023
    0.9961
    1.0064
    0.9999
    1.0033
    1.0031
    1.0035
    1.0013
    0.9990
    1.0015
    1.0000
    0.9995
    1.0004
    0.9998
    0.9999
    0.9998
    0.9999

Maximum should be Boolean

ans =

     1

success (0) or failure (1) of the data in range and comb veto tests:

ans =

     1


ans =

     1

This many frames are being written
     4

Window fails veto test.
Range veto (zero is good, one is bad)

ans =

     1

Comb veto (zero is good, one is bad)

ans =

     1

Veto alarm raised; will write baseline
Amount of data to be written
    18874368

        1152

Calculating pre- and post-filter PSD
Elapsed time is 7.610795 seconds.

ans =

    86


ans =

     1


ans =

     1

    'Pre-filter range was 13089.7312 kpc'

    'Post-filter range is 13045.9001 kpc'

    'Improvement factor is 0.99665'

{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 395
  In HoftEditor>HoftEditor.initialFrameWriter at 248
  In eleutheria>windower at 39
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 395
  In HoftEditor>HoftEditor.initialFrameWriter at 248
  In eleutheria>windower at 39
  In eleutheria>filterer at 94
  In eleutheria at 104
Comb limit for this window

ans =

    1.2000

Values of combed points

ans =

    1.0005
    0.9977
    2.6525
    0.9947
    1.0019
    1.0003
    0.9929
    1.0007
    1.0038
    0.9884
    0.9921
    1.0032
    0.9971
    1.0008
    0.9989
    0.9979
    0.9958
    0.9950
    1.0010
    0.9995
    0.9951
    1.0021
    1.0017
    1.0023
    0.9961
    1.0064
    0.9999
    1.0033
    1.0031
    1.0035
    1.0013
    0.9990
    1.0015
    1.0000
    0.9995
    1.0004
    0.9998
    0.9999
    0.9998
    0.9999

Maximum should be Boolean

ans =

     1

success (0) or failure (1) of the data in range and comb veto tests:

ans =

     1


ans =

     1

This many frames are being written
     4

HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931134464-931134592-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931134464-931134592-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931134464-931134592-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931134592-931134720-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931134592-931134720-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931134592-931134720-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931134720-931134848-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931134720-931134848-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931134720-931134848-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931134848-931134976-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931134848-931134976-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931134848-931134976-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
Offline ZPKs displayed below
 
Zero/pole/gain:
0
 
 
Zero/pole/gain:
 
                                                                                        
7.2818e-16 (s-215.9) (s^2 + 8.702s + 1.09e05) (s^2 + 7.354s + 1.146e05)                 
                                                                                        
        (s^2 + 2.353s + 1.534e05) (s^2 + 0.9755s + 1.713e05) (s^2 + 0.2462s + 1.957e05) 
                                                                                        
        (s^2 - 0.2301s + 2.217e05) (s^2 - 0.201s + 2.3e05) (s^2 + 18.82s + 2.429e05)    
                                                                                        
        (s^2 - 11.69s + 2.502e05) (s^2 - 0.1777s + 3.267e05) (s^2 + 2.227s + 3.804e05)  
                                                                                        
        (s^2 - 1.142s + 4.586e05) (s^2 + 0.7772s + 5.967e05) (s^2 + 0.7637s + 6.907e05) 
                                                                                        
        (s^2 + 10.08s + 7.826e05) (s^2 - 4.534s + 1.233e06) (s^2 - 1.471s + 1.318e06)   
                                                                                        
        (s^2 - 0.2818s + 1.579e06) (s^2 + 1.573s + 1.638e06) (s^2 + 7.518s + 1.985e06)  
                                                                                        
        (s^2 + 0.2704s + 3.052e06) (s^2 + 1.828s + 4.277e06) (s^2 + 3526s + 9.386e06)   
                                                                                        
        (s^2 - 35.19s + 6.761e06) (s^2 + 2.44s + 6.882e06) (s^2 + 3.49s + 7.381e06)     
                                                                                        
        (s^2 + 10.5s + 9.651e06) (s^2 + 1.107s + 1.314e07) (s^2 + 0.9523s + 1.883e07)   
                                                                                        
        (s^2 + 3.066s + 1.901e07) (s^2 - 9.332s + 1.916e07) (s^2 + 87.8s + 1.957e07)    
                                                                                        
-----------------------------------------------------------------------------------------
                                                                                         
(s^2 + 12.45s + 8.688e04) (s^2 + 9.349s + 1.1e05) (s^2 + 12.52s + 1.168e05)              
                                                                                         
        (s^2 + 0.9577s + 1.606e05) (s^2 + 2.768s + 1.724e05) (s^2 + 0.7907s + 1.97e05)   
                                                                                         
        (s^2 + 1.1s + 2.219e05) (s^2 + 0.9812s + 2.289e05) (s^2 + 1.068s + 2.474e05)     
                                                                                         
        (s^2 + 0.3176s + 2.518e05) (s^2 + 0.3253s + 3.266e05) (s^2 + 1.685s + 3.809e05)  
                                                                                         
        (s^2 + 0.00808s + 4.598e05) (s^2 + 0.6189s + 5.978e05) (s^2 + 0.605s + 6.898e05) 
                                                                                         
        (s^2 + 5.617s + 7.829e05) (s^2 + 1.114s + 1.235e06) (s^2 + 1.226s + 1.322e06)    
                                                                                         
        (s^2 + 0.8888s + 1.583e06) (s^2 + 0.3058s + 1.636e06) (s^2 + 5.319s + 1.983e06)  
                                                                                         
        (s^2 + 4.603s + 3.038e06) (s^2 + 3.369s + 4.263e06) (s^2 + 0.5696s + 6.867e06)   
                                                                                         
        (s^2 + 2.732s + 6.913e06) (s^2 + 4.547s + 7.381e06) (s^2 + 3.963s + 9.619e06)    
                                                                                         
        (s^2 + 0.6868s + 1.314e07) (s^2 + 1.698s + 1.88e07) (s^2 + 9.503s + 1.9e07)      
                                                                                         
        (s^2 + 16.94s + 1.904e07) (s^2 + 5.234s + 1.909e07) (s^2 + 6.22e04s + 1.934e09)  
                                                                                         
 
RMS errors displayered below

ans =

   4.9558e-18


ans =

   9.7714e-19

Lengths of passed DARM, MICH and PRC vrctors:
     0

     0

     0

A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931135067

   931135067

   931136091

   931136091

        1024

        1024

   931135579

   931135579

   512

   512

This message will display if the second subsection is doing the correct thing for DARM
Check on DARM

ans =

   1.0e-16 *

    0.1493
    0.1387
    0.1259
    0.1155
    0.1049
    0.0933
    0.0819
    0.0717
    0.0603
    0.0493
    0.0386

Check on new: first three samples should be same as last above

ans =

   1.0e-17 *

    0.6030
    0.4928
    0.3861
    0.2600
    0.1571
    0.0495
   -0.0636
   -0.1791
   -0.2896
   -0.3942
   -0.5118
   -0.6218
   -0.7325

This message will display if the second subsection is doing the correct thing for MICH
Check on MICH

ans =

   37.1925
   36.9860
   36.7810
   36.5819
   36.3734
   36.1576
   35.9446
   35.7283
   35.5183
   35.3194
   35.1153

Check on new: first three samples should be same as last above

ans =

   35.5183
   35.3194
   35.1153
   34.9050
   34.6916
   34.4788
   34.2757
   34.0734
   33.8627
   33.6580
   33.4671
   33.2730
   33.0732

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 27,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 45,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 50,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 6.423997 seconds.
A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931135067

   931135067

   931136091

   931136091

        1024

        1024

   931135579

   931135579

   512

   512

This message will display if the second subsection is doing the correct thing for PRC
Check on PRC

ans =

 -263.2893
 -264.2641
 -265.2411
 -266.2015
 -267.1472
 -268.0605
 -268.9455
 -269.8444
 -270.7754
 -271.7178
 -272.6474

Check on new: first three samples should be same as last above

ans =

 -270.7754
 -271.7178
 -272.6474
 -273.5671
 -274.5096
 -275.4877
 -276.4731
 -277.4442
 -278.4139
 -279.4140
 -280.4597
 -281.5107
 -282.5074

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 27,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 45,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 48,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 63,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 63,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 10.625187 seconds.
Offline ZPKs displayed below
 
Zero/pole/gain:
0
 
 
Zero/pole/gain:
 
                                                                                       
 7.3253e-16 (s+42.2) (s^2 + 10.7s + 1.17e05) (s^2 - 31.75s + 1.36e05)                  
                                                                                       
         (s^2 + 5.499s + 1.754e05) (s^2 + 1.241s + 1.837e05) (s^2 + 5.909s + 2.057e05) 
                                                                                       
         (s^2 + 19.37s + 2.326e05) (s^2 + 6.47s + 2.413e05) (s^2 + 4.632s + 2.536e05)  
                                                                                       
         (s^2 + 1.928s + 2.9e05) (s^2 + 1.264s + 3.179e05) (s^2 + 3.061s + 3.987e05)   
                                                                                       
         (s^2 + 0.6238s + 4.574e05) (s^2 + 5.161s + 4.861e05) (s^2 + 18.5s + 5.542e05) 
                                                                                       
         (s^2 + 2.866s + 8.23e05) (s^2 + 5.123s + 1.027e06) (s^2 - 5.13s + 1.232e06)   
                                                                                       
         (s^2 + 10.91s + 1.325e06) (s^2 - 1.118s + 1.578e06) (s^2 + 1.414s + 1.746e06) 
                                                                                       
         (s^2 - 2.757s + 3.063e06) (s^2 + 4107s + 8.364e06) (s^2 + 3.063s + 4.279e06)  
                                                                                       
         (s^2 - 29.37s + 6.714e06) (s^2 - 1.499s + 6.886e06) (s^2 - 3.124s + 7.223e06) 
                                                                                       
         (s^2 + 2.685s + 1.056e07) (s^2 + 1.82s + 1.332e07) (s^2 + 5.598s + 1.879e07)  
                                                                                       
         (s^2 - 1.683s + 1.906e07) (s^2 + 73.79s + 1.923e07) (s^2 + 1.682s + 1.943e07) 
                                                                                       
----------------------------------------------------------------------------------------
                                                                                        
(s^2 + 24.56s + 9.971e04) (s^2 + 5.218s + 1.238e05) (s^2 + 0.618s + 1.593e05)           
                                                                                        
        (s^2 + 4.408s + 1.795e05) (s^2 + 8.719s + 1.858e05) (s^2 + 6.686s + 2.104e05)   
                                                                                        
        (s^2 + 9.353s + 2.4e05) (s^2 + 4.257s + 2.452e05) (s^2 + 0.2626s + 2.531e05)    
                                                                                        
        (s^2 + 2.519s + 2.918e05) (s^2 + 1.201s + 3.184e05) (s^2 + 2.268s + 4.003e05)   
                                                                                        
        (s^2 + 0.5302s + 4.6e05) (s^2 + 2.944s + 4.881e05) (s^2 + 4.603s + 5.564e05)    
                                                                                        
        (s^2 + 2.969s + 8.219e05) (s^2 + 5.199s + 1.031e06) (s^2 + 1.456s + 1.235e06)   
                                                                                        
        (s^2 + 1.853s + 1.329e06) (s^2 + 2.251s + 1.578e06) (s^2 + 3.077s + 1.742e06)   
                                                                                        
        (s^2 + 4.627s + 3.043e06) (s^2 + 1.242s + 4.267e06) (s^2 + 0.3169s + 6.869e06)  
                                                                                        
        (s^2 + 4.699s + 6.905e06) (s^2 + 0.5757s + 7.218e06) (s^2 + 2.786s + 1.056e07)  
                                                                                        
        (s^2 + 4.105s + 1.333e07) (s^2 + 0.01186s + 1.879e07) (s^2 + 5.859s + 1.901e07) 
                                                                                        
        (s^2 + 6.539s + 1.912e07) (s^2 + 8.357s + 1.94e07) (s^2 + 6.22e04s + 1.934e09)  
                                                                                        
 
RMS errors are displayed below

ans =

   1.8384e-18


ans =

   6.9492e-19

Amount of data to be written
    18874368

        1152

Calculating pre- and post-filter PSD
Elapsed time is 7.903126 seconds.

ans =

    86


ans =

     1


ans =

     1

    'Pre-filter range was 12916.4379 kpc'

    'Post-filter range is 12940.1095 kpc'

    'Improvement factor is 1.0018'

{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Comb limit for this window

ans =

    1.2000

Values of combed points

ans =

    0.9994
    0.9963
    0.9974
    0.9940
    0.9908
    0.9946
    0.9933
    1.0035
    1.0015
    0.9942
    0.9859
    0.9973
    0.9981
    0.9985
    1.0013
    0.9949
    0.9996
    1.0013
    0.9993
    1.0055
    0.9945
    0.9951
    1.0022
    1.0016
    0.9978
    1.0015
    1.0005
    1.0041
    1.0018
    1.0032
    1.0005
    1.0015
    0.9999
    1.0002
    1.0009
    1.0000
    0.9993
    1.0000
    0.9996
    0.9998

Maximum should be Boolean

ans =

     0

success (0) or failure (1) of the data in range and comb veto tests:

ans =

     0


ans =

     0

This many frames are being written
     4

HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931134976-931135104-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931134976-931135104-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931134976-931135104-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135104-931135232-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135104-931135232-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135104-931135232-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135232-931135360-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135232-931135360-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135232-931135360-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135360-931135488-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135360-931135488-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135360-931135488-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
Lengths of passed DARM, MICH and PRC vrctors:
     0

     0

     0

A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931135579

   931135579

   931136603

   931136603

        1024

        1024

   931136091

   931136091

   512

   512

This message will display if the second subsection is doing the correct thing for DARM
Check on DARM

ans =

   1.0e-16 *

   -0.9882
   -0.9852
   -0.9852
   -0.9846
   -0.9827
   -0.9817
   -0.9789
   -0.9773
   -0.9756
   -0.9743
   -0.9735

Check on new: first three samples should be same as last above

ans =

   1.0e-16 *

   -0.9756
   -0.9743
   -0.9735
   -0.9714
   -0.9700
   -0.9670
   -0.9642
   -0.9638
   -0.9617
   -0.9596
   -0.9581
   -0.9550
   -0.9519

This message will display if the second subsection is doing the correct thing for MICH
Check on MICH

ans =

   83.9609
   84.0404
   84.1103
   84.1821
   84.2629
   84.3423
   84.4176
   84.4907
   84.5720
   84.6508
   84.7323

Check on new: first three samples should be same as last above

ans =

   84.5720
   84.6508
   84.7323
   84.8182
   84.9022
   84.9873
   85.0696
   85.1450
   85.2131
   85.2829
   85.3588
   85.4380
   85.5180

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 26,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 34,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 51,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 59,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 6.465067 seconds.
A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931135579

   931135579

   931136603

   931136603

        1024

        1024

   931136091

   931136091

   512

   512

This message will display if the second subsection is doing the correct thing for PRC
Check on PRC

ans =

 -746.6265
 -746.5193
 -746.3972
 -746.2249
 -745.9988
 -745.7446
 -745.5012
 -745.2894
 -745.1054
 -744.9227
 -744.7079

Check on new: first three samples should be same as last above

ans =

 -745.1054
 -744.9227
 -744.7079
 -744.4666
 -744.2278
 -744.0010
 -743.7843
 -743.5699
 -743.3383
 -743.0718
 -742.7748
 -742.4872
 -742.2426

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 29,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 44,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 49,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 63,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 64,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 7.455473 seconds.
Offline ZPKs displayed below
 
Zero/pole/gain:
 
                                                                                       
-3.4692e-16 (s+849.2) (s^2 - 0.8887s + 1.085e05) (s^2 + 6.012s + 1.203e05)             
                                                                                       
        (s^2 - 39.34s + 1.258e05) (s^2 + 16.86s + 1.709e05) (s^2 + 1.841s + 1.793e05)  
                                                                                       
        (s^2 + 1.366s + 1.942e05) (s^2 + 0.8565s + 2.167e05) (s^2 + 5.935s + 2.282e05) 
                                                                                       
        (s^2 + 1.273s + 2.723e05) (s^2 + 1.431s + 3.234e05) (s^2 + 2.504s + 3.84e05)   
                                                                                       
        (s^2 + 2.105s + 4.639e05) (s^2 + 12.24s + 6.001e05) (s^2 + 15.9s + 8.764e05)   
                                                                                       
        (s^2 + 1.656s + 9.911e05) (s^2 - 4.872s + 1.27e06) (s^2 + 2.483s + 1.595e06)   
                                                                                       
        (s^2 + 19.58s + 3.125e06) (s^2 - 4921s + 9.572e06) (s^2 + 9.504s + 4.158e06)   
                                                                                       
        (s^2 + 41.34s + 4.425e06) (s^2 - 13.28s + 5.651e06) (s^2 - 32.09s + 6.217e06)  
                                                                                       
        (s^2 - 8.447s + 6.922e06) (s^2 + 15.03s + 6.941e06) (s^2 + 3.886s + 1.081e07)  
                                                                                       
        (s^2 - 5.655s + 1.275e07) (s^2 - 10.95s + 1.732e07) (s^2 + 15.71s + 1.862e07)  
                                                                                       
        (s^2 + 556.5s + 1.952e07) (s^2 - 10.93s + 2.242e07) (s^2 + 46.45s + 2.392e07)  
                                                                                       
---------------------------------------------------------------------------------------
                                                                                       
(s^2 + 14.49s + 1.029e05) (s^2 + 15.72s + 1.104e05) (s^2 + 7.591s + 1.224e05)          
                                                                                       
        (s^2 + 21.79s + 1.491e05) (s^2 + 16.78s + 1.73e05) (s^2 + 8.751s + 1.794e05)   
                                                                                       
        (s^2 + 3.008s + 1.937e05) (s^2 + 3.703s + 2.172e05) (s^2 + 7.457s + 2.281e05)  
                                                                                       
        (s^2 + 1.492s + 2.728e05) (s^2 + 0.2927s + 3.238e05) (s^2 + 0.747s + 3.845e05) 
                                                                                       
        (s^2 + 2.308s + 4.634e05) (s^2 + 8.581s + 5.983e05) (s^2 + 21.3s + 8.67e05)    
                                                                                       
        (s^2 + 0.7925s + 9.918e05) (s^2 + 6.633s + 1.25e06) (s^2 + 3.371s + 1.599e06)  
                                                                                       
        (s^2 + 8.651s + 3.133e06) (s^2 + 6.703s + 4.178e06) (s^2 + 6.89s + 4.444e06)   
                                                                                       
        (s^2 + 6.622s + 5.689e06) (s^2 + 4.257s + 6.862e06) (s^2 + 14.78s + 6.927e06)  
                                                                                       
        (s^2 + 11.27s + 6.978e06) (s^2 + 2.621s + 1.085e07) (s^2 + 0.3794s + 1.281e07) 
                                                                                       
        (s^2 + 3.236s + 1.72e07) (s^2 + 1.653s + 1.871e07) (s^2 + 10.68s + 1.908e07)   
                                                                                       
        (s^2 + 2.435s + 2.236e07) (s^2 + 1.742s + 2.402e07) (s^2 + 6.22e04s + 1.934e09)
                                                                                       
 
 
Zero/pole/gain:
 
                                                                                       
8.269e-16 (s-82.33) (s^2 + 8.621s + 1.089e05) (s^2 - 1.369s + 1.155e05)                
                                                                                       
        (s^2 - 10.5s + 1.429e05) (s^2 + 2.834s + 1.833e05) (s^2 + 2.086s + 2.043e05)   
                                                                                       
        (s^2 + 27.97s + 2.301e05) (s^2 + 1.507s + 2.343e05) (s^2 + 7.172s + 2.52e05)   
                                                                                       
        (s^2 - 1.397s + 2.642e05) (s^2 - 3.338s + 3.009e05) (s^2 + 5.718s + 3.083e05)  
                                                                                       
        (s^2 + 8.015s + 3.477e05) (s^2 + 0.2766s + 4.564e05) (s^2 + 3.942s + 4.819e05) 
                                                                                       
        (s^2 + 7.699s + 5.314e05) (s^2 - 0.05887s + 9.32e05) (s^2 - 4.481s + 1.233e06) 
                                                                                       
        (s^2 - 8.116s + 1.316e06) (s^2 - 2.972s + 1.579e06) (s^2 + 1.921s + 1.677e06)  
                                                                                       
        (s^2 - 2.078s + 3.057e06) (s^2 + 2.349s + 3.83e06) (s^2 + 3525s + 9.274e06)    
                                                                                       
        (s^2 - 21.41s + 6.785e06) (s^2 + 8.949s + 6.901e06) (s^2 + 6.499s + 7.357e06)  
                                                                                       
        (s^2 - 5.777s + 1.151e07) (s^2 + 1.464s + 1.324e07) (s^2 - 6.416s + 1.867e07)  
                                                                                       
        (s^2 - 4.677s + 1.887e07) (s^2 + 7.682s + 1.908e07) (s^2 - 11.98s + 1.959e07)  
                                                                                       
----------------------------------------------------------------------------------------
                                                                                        
(s^2 + 9.802s + 9.708e04) (s^2 + 2.021s + 1.147e05) (s^2 + 14.37s + 1.158e05)           
                                                                                        
        (s^2 + 1.872s + 1.598e05) (s^2 + 6.076s + 1.875e05) (s^2 + 2.906s + 2.046e05)   
                                                                                        
        (s^2 + 2.35s + 2.347e05) (s^2 + 10.95s + 2.463e05) (s^2 + 2.02s + 2.533e05)     
                                                                                        
        (s^2 + 2.972s + 2.643e05) (s^2 + 0.7766s + 3.012e05) (s^2 + 4.312s + 3.1e05)    
                                                                                        
        (s^2 + 9.436s + 3.529e05) (s^2 + 1.229s + 4.588e05) (s^2 + 4.407s + 4.841e05)   
                                                                                        
        (s^2 + 9.092s + 5.34e05) (s^2 + 0.3444s + 9.327e05) (s^2 + 2.648s + 1.234e06)   
                                                                                        
        (s^2 + 2.157s + 1.32e06) (s^2 + 1.233s + 1.576e06) (s^2 + 1.915s + 1.676e06)    
                                                                                        
        (s^2 + 1.568s + 3.043e06) (s^2 + 2.866s + 3.831e06) (s^2 + 1.08s + 6.864e06)    
                                                                                        
        (s^2 + 5.553s + 6.943e06) (s^2 + 5.243s + 7.357e06) (s^2 + 0.06332s + 1.15e07)  
                                                                                        
        (s^2 + 5.782s + 1.324e07) (s^2 + 1.056s + 1.865e07) (s^2 + 2.045s + 1.88e07)    
                                                                                        
        (s^2 + 6.793s + 1.905e07) (s^2 + 0.5993s + 1.914e07) (s^2 + 6.22e04s + 1.934e09)
                                                                                        
 
RMS errors are displayed below

ans =

   7.5118e-19


ans =

   5.1712e-19

Amount of data to be written
    18874368

        1152

Calculating pre- and post-filter PSD
Elapsed time is 6.669541 seconds.

ans =

    86


ans =

     1


ans =

     1

    'Pre-filter range was 13393.5008 kpc'

    'Post-filter range is 13493.2853 kpc'

    'Improvement factor is 1.0075'

{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Comb limit for this window

ans =

    1.2000

Values of combed points

ans =

    0.9878
    1.0003
    0.9940
    0.9933
    0.9955
    0.9911
    0.9923
    0.9877
    0.9904
    0.9832
    0.9806
    0.9901
    0.9876
    0.9975
    0.9991
    0.9868
    1.0048
    0.9964
    0.9968
    0.9919
    0.9973
    0.9996
    1.0017
    1.0012
    1.0001
    1.0015
    1.0020
    1.0052
    1.0078
    1.0010
    1.0006
    0.9998
    0.9995
    1.0003
    0.9993
    1.0004
    1.0002
    0.9995
    1.0001
    0.9999

Maximum should be Boolean

ans =

     0

success (0) or failure (1) of the data in range and comb veto tests:

ans =

     0


ans =

     0

This many frames are being written
     4

HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135488-931135616-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135488-931135616-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135488-931135616-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135616-931135744-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135616-931135744-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135616-931135744-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135744-931135872-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135744-931135872-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135744-931135872-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135872-931136000-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135872-931136000-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931135872-931136000-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
Lengths of passed DARM, MICH and PRC vrctors:
     0

     0

     0

A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931136091

   931136091

   931137115

   931137115

        1024

        1024

   931136603

   931136603

   512

   512

This message will display if the second subsection is doing the correct thing for DARM
Check on DARM

ans =

   1.0e-15 *

   -0.1839
   -0.1838
   -0.1837
   -0.1837
   -0.1835
   -0.1834
   -0.1831
   -0.1829
   -0.1827
   -0.1826
   -0.1825

Check on new: first three samples should be same as last above

ans =

   1.0e-15 *

   -0.1827
   -0.1826
   -0.1825
   -0.1822
   -0.1821
   -0.1817
   -0.1814
   -0.1813
   -0.1811
   -0.1809
   -0.1806
   -0.1803
   -0.1799

This message will display if the second subsection is doing the correct thing for MICH
Check on MICH

ans =

   74.3901
   74.2058
   74.0160
   73.8341
   73.6472
   73.4601
   73.2804
   73.1005
   72.9187
   72.7359
   72.5505

Check on new: first three samples should be same as last above

ans =

   72.9187
   72.7359
   72.5505
   72.3659
   72.1838
   72.0001
   71.8172
   71.6404
   71.4585
   71.2805
   71.1129
   70.9427
   70.7734

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 26,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 32,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 52,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 60,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 65,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 6.666435 seconds.
A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931136091

   931136091

   931137115

   931137115

        1024

        1024

   931136603

   931136603

   512

   512

This message will display if the second subsection is doing the correct thing for PRC
Check on PRC

ans =

 -801.4772
 -800.9976
 -800.4884
 -799.9490
 -799.3799
 -798.8005
 -798.2456
 -797.7197
 -797.1915
 -796.6408
 -796.0638

Check on new: first three samples should be same as last above

ans =

 -797.1915
 -796.6408
 -796.0638
 -795.4535
 -794.8077
 -794.1382
 -793.4523
 -792.7613
 -792.0981
 -791.4845
 -790.9147
 -790.3615
 -789.7819

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 29,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 40,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 51,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 56,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 64,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 8.258725 seconds.
Offline ZPKs displayed below
 
Zero/pole/gain:
 
                                                                                       
4.1865e-17 (s+1.678e04) (s-2368) (s+925) (s^2 + 2.56s + 1.101e05)                      
                                                                                       
        (s^2 + 6.789s + 1.216e05) (s^2 - 8.533s + 1.455e05) (s^2 + 7.689s + 1.705e05)  
                                                                                       
        (s^2 + 3.937s + 2.14e05) (s^2 + 8.407s + 2.617e05) (s^2 + 3.944s + 3.229e05)   
                                                                                       
        (s^2 + 2.292s + 3.518e05) (s^2 + 8.929s + 3.983e05) (s^2 + 8.264s + 4.755e05)  
                                                                                       
        (s^2 + 118.8s + 5.657e05) (s^2 - 6.301s + 1.303e06) (s^2 - 1.835s + 1.736e06)  
                                                                                       
        (s^2 + 12.9s + 3.083e06) (s^2 + 29.34s + 4.002e06) (s^2 + 43.37s + 4.424e06)   
                                                                                       
        (s^2 - 5.053s + 5.266e06) (s^2 - 16.49s + 6.816e06) (s^2 - 31.56s + 6.906e06)  
                                                                                       
        (s^2 + 18.87s + 6.909e06) (s^2 - 0.4437s + 9.193e06) (s^2 + 14.33s + 1.084e07) 
                                                                                       
        (s^2 - 7.093s + 1.271e07) (s^2 - 2.713s + 1.566e07) (s^2 - 32.94s + 1.856e07)  
                                                                                       
        (s^2 + 1.237s + 1.876e07) (s^2 + 2.599s + 1.906e07) (s^2 + 65.9s + 2.202e07)   
                                                                                       
        (s^2 - 17.69s + 2.306e07) (s^2 + 1.123s + 2.395e07) (s^2 - 310.7s + 3.212e07)  
                                                                                       
---------------------------------------------------------------------------------------
                                                                                       
(s^2 + 12.31s + 9.079e04) (s^2 + 6.568s + 1.122e05) (s^2 + 11.18s + 1.224e05)          
                                                                                       
        (s^2 + 16.39s + 1.601e05) (s^2 + 9.282s + 1.698e05) (s^2 + 3.894s + 2.144e05)  
                                                                                       
        (s^2 + 4.315s + 2.63e05) (s^2 + 2.415s + 3.23e05) (s^2 + 1.892s + 3.509e05)    
                                                                                       
        (s^2 + 5.147s + 3.974e05) (s^2 + 8.395s + 4.746e05) (s^2 + 74.26s + 5.448e05)  
                                                                                       
        (s^2 + 8.39s + 1.277e06) (s^2 + 0.3958s + 1.735e06) (s^2 + 4.13s + 3.081e06)   
                                                                                       
        (s^2 + 16.38s + 4.025e06) (s^2 + 12.96s + 4.411e06) (s^2 + 0.1438s + 5.27e06)  
                                                                                       
        (s^2 + 4.312s + 6.829e06) (s^2 + 0.6589s + 6.867e06) (s^2 + 1.302s + 6.963e06) 
                                                                                       
        (s^2 + 3.419s + 9.193e06) (s^2 + 1.1s + 1.085e07) (s^2 + 3.194s + 1.28e07)     
                                                                                       
        (s^2 + 1.074s + 1.566e07) (s^2 + 0.1962s + 1.86e07) (s^2 + 6.726s + 1.879e07)  
                                                                                       
        (s^2 + 1.355s + 1.904e07) (s^2 + 42.25s + 1.921e07) (s^2 + 6.844s + 2.233e07)  
                                                                                       
        (s^2 + 4.815s + 2.399e07) (s^2 + 11.44s + 2.401e07) (s^2 + 6.22e04s + 1.934e09)
                                                                                       
 
 
Zero/pole/gain:
 
                                                                                        
9.2644e-16 (s-259.7) (s^2 + 3.307s + 1.084e05) (s^2 - 2.084s + 1.152e05)                
                                                                                        
        (s^2 + 0.8677s + 1.538e05) (s^2 + 1.952s + 1.716e05) (s^2 + 0.2573s + 1.828e05) 
                                                                                        
        (s^2 + 2.538s + 2.181e05) (s^2 + 14.98s + 2.447e05) (s^2 - 0.9059s + 2.511e05)  
                                                                                        
        (s^2 - 1.028s + 2.783e05) (s^2 - 0.2289s + 3.463e05) (s^2 + 3.37s + 3.889e05)   
                                                                                        
        (s^2 - 3.069s + 5.279e05) (s^2 + 1.499s + 5.972e05) (s^2 + 1.507s + 6.58e05)    
                                                                                        
        (s^2 + 2.888s + 9.776e05) (s^2 - 11.97s + 1.305e06) (s^2 + 4.925s + 1.383e06)   
                                                                                        
        (s^2 + 0.857s + 1.565e06) (s^2 + 2.993s + 1.951e06) (s^2 + 2.819s + 3.035e06)   
                                                                                        
        (s^2 - 1.38s + 4.176e06) (s^2 + 4.201s + 5.894e06) (s^2 - 32.95s + 6.79e06)     
                                                                                        
        (s^2 + 2.285s + 7.13e06) (s^2 + 2680s + 9.852e06) (s^2 + 2.53s + 1.143e07)      
                                                                                        
        (s^2 + 2.576s + 1.314e07) (s^2 + 0.5576s + 1.876e07) (s^2 + 14.62s + 1.889e07)  
                                                                                        
        (s^2 + 4.097s + 1.91e07) (s^2 + 22.17s + 1.984e07) (s^2 + 4.408s + 2.206e07)    
                                                                                        
----------------------------------------------------------------------------------------
                                                                                       
(s^2 + 21.33s + 7.765e04) (s^2 + 5.325s + 1.099e05) (s^2 + 1.856s + 1.163e05)          
                                                                                       
        (s^2 + 1.109s + 1.609e05) (s^2 + 2.778s + 1.727e05) (s^2 + 4.985s + 1.848e05)  
                                                                                       
        (s^2 + 1.518s + 2.188e05) (s^2 + 1.704s + 2.469e05) (s^2 + 0.5857s + 2.525e05) 
                                                                                       
        (s^2 + 0.9443s + 2.772e05) (s^2 + 2.1s + 3.471e05) (s^2 + 1.594s + 3.905e05)   
                                                                                       
        (s^2 + 0.6091s + 5.282e05) (s^2 + 0.9539s + 5.983e05) (s^2 + 1.063s + 6.58e05) 
                                                                                       
        (s^2 + 1.839s + 9.784e05) (s^2 + 5.61s + 1.317e06) (s^2 + 8.507s + 1.382e06)   
                                                                                       
        (s^2 + 1.763s + 1.568e06) (s^2 + 2.76s + 1.95e06) (s^2 + 4.566s + 3.026e06)    
                                                                                       
        (s^2 + 6.081s + 4.175e06) (s^2 + 2.642s + 5.891e06) (s^2 + 2.809s + 6.869e06)  
                                                                                       
        (s^2 + 1.986s + 7.124e06) (s^2 + 2.75s + 1.142e07) (s^2 + 0.9588s + 1.314e07)  
                                                                                       
        (s^2 + 5.487s + 1.874e07) (s^2 + 1.798s + 1.879e07) (s^2 + 4.46s + 1.906e07)   
                                                                                       
        (s^2 + 1.044s + 1.913e07) (s^2 + 4.897s + 2.207e07) (s^2 + 6.22e04s + 1.934e09)
                                                                                       
 
RMS errors are displayed below

ans =

   6.0942e-19


ans =

   4.8230e-19

Amount of data to be written
    18874368

        1152

Calculating pre- and post-filter PSD
Elapsed time is 7.245137 seconds.

ans =

    86


ans =

     1


ans =

     1

    'Pre-filter range was 11923.6125 kpc'

    'Post-filter range is 12100.8346 kpc'

    'Improvement factor is 1.0149'

{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Comb limit for this window

ans =

    1.2000

Values of combed points

ans =

    0.9945
    0.9897
    1.0040
    0.9772
    0.9871
    0.9713
    0.9812
    0.9746
    0.9732
    0.9663
    0.9905
    0.9866
    1.0025
    0.9986
    0.9995
    0.9799
    0.9988
    0.9915
    0.9953
    1.0017
    0.9974
    1.0010
    1.0007
    1.0007
    1.0013
    1.0000
    1.0023
    1.0047
    1.0049
    1.0037
    0.9996
    0.9991
    0.9985
    1.0006
    1.0005
    1.0002
    0.9994
    1.0005
    0.9999
    1.0004

Maximum should be Boolean

ans =

     0

success (0) or failure (1) of the data in range and comb veto tests:

ans =

     0


ans =

     0

This many frames are being written
     4

HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136000-931136128-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136000-931136128-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136000-931136128-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136128-931136256-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136128-931136256-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136128-931136256-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136256-931136384-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136256-931136384-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136256-931136384-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136384-931136512-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136384-931136512-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136384-931136512-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
Lengths of passed DARM, MICH and PRC vrctors:
     0

     0

     0

A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931136603

   931136603

   931137627

   931137627

        1024

        1024

   931137115

   931137115

   512

   512

This message will display if the second subsection is doing the correct thing for DARM
Check on DARM

ans =

   1.0e-16 *

    0.8422
    0.8485
    0.8552
    0.8617
    0.8667
    0.8743
    0.8824
    0.8887
    0.8955
    0.9014
    0.9067

Check on new: first three samples should be same as last above

ans =

   1.0e-16 *

    0.8955
    0.9014
    0.9067
    0.9127
    0.9204
    0.9276
    0.9341
    0.9400
    0.9448
    0.9508
    0.9576
    0.9641
    0.9713

This message will display if the second subsection is doing the correct thing for MICH
Check on MICH

ans =

  111.0014
  111.1168
  111.2301
  111.3434
  111.4501
  111.5526
  111.6604
  111.7678
  111.8772
  111.9914
  112.1053

Check on new: first three samples should be same as last above

ans =

  111.8772
  111.9914
  112.1053
  112.2137
  112.3201
  112.4271
  112.5283
  112.6310
  112.7336
  112.8331
  112.9386
  113.0450
  113.1486

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 27,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 44,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 49,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 61,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 63,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 6.450511 seconds.
A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931136603

   931136603

   931137627

   931137627

        1024

        1024

   931137115

   931137115

   512

   512

This message will display if the second subsection is doing the correct thing for PRC
Check on PRC

ans =

 -418.5985
 -415.9693
 -413.3705
 -410.7776
 -408.1801
 -405.5794
 -402.9734
 -400.3665
 -397.7555
 -395.1299
 -392.4998

Check on new: first three samples should be same as last above

ans =

 -397.7555
 -395.1299
 -392.4998
 -389.8907
 -387.3134
 -384.7506
 -382.1783
 -379.6017
 -377.0480
 -374.5173
 -371.9797
 -369.4180
 -366.8410

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 30,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 42,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 52,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 59,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 65,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 11.744259 seconds.
Offline ZPKs displayed below
 
Zero/pole/gain:
 
                                                                                       
-5.1579e-16 (s+587.2) (s^2 + 2.299s + 1.083e05) (s^2 - 29.56s + 1.235e05)              
                                                                                       
        (s^2 + 2.261s + 1.727e05) (s^2 + 27.93s + 1.788e05) (s^2 + 3.77s + 1.876e05)   
                                                                                       
        (s^2 + 3.442s + 2.225e05) (s^2 + 3.429s + 2.29e05) (s^2 + 14.64s + 2.492e05)   
                                                                                       
        (s^2 + 1.04s + 2.803e05) (s^2 + 2.406s + 3.291e05) (s^2 + 1.645s + 3.903e05)   
                                                                                       
        (s^2 + 0.9013s + 4.561e05) (s^2 + 3.386s + 4.814e05) (s^2 + 38.09s + 7.939e05) 
                                                                                       
        (s^2 + 2.486s + 9.852e05) (s^2 - 5.337s + 1.271e06) (s^2 + 2.634s + 1.451e06)  
                                                                                       
        (s^2 - 4047s + 6.742e06) (s^2 + 0.4536s + 4.049e06) (s^2 + 22.1s + 4.492e06)   
                                                                                       
        (s^2 + 7.013s + 5.758e06) (s^2 - 171.8s + 6.524e06) (s^2 + 1.927s + 6.893e06)  
                                                                                       
        (s^2 + 10.09s + 6.987e06) (s^2 - 12.33s + 9.693e06) (s^2 + 5.779s + 1.272e07)  
                                                                                       
        (s^2 + 30.12s + 1.517e07) (s^2 - 1.547s + 1.86e07) (s^2 + 370.4s + 1.869e07)   
                                                                                       
        (s^2 + 21.46s + 1.887e07) (s^2 + 31.48s + 2.236e07) (s^2 + 12.75s + 2.388e07)  
                                                                                       
----------------------------------------------------------------------------------------
                                                                                        
(s^2 + 0.9916s + 1.06e05) (s^2 + 40.62s + 1.237e05) (s^2 + 17.44s + 1.452e05)           
                                                                                        
        (s^2 + 3.69s + 1.718e05) (s^2 + 20.25s + 1.815e05) (s^2 + 6.465s + 1.88e05)     
                                                                                        
        (s^2 + 5.155s + 2.23e05) (s^2 + 1.496s + 2.304e05) (s^2 + 9.033s + 2.532e05)    
                                                                                        
        (s^2 + 1.624s + 2.822e05) (s^2 + 0.5942s + 3.308e05) (s^2 + 2.613s + 3.913e05)  
                                                                                        
        (s^2 + 0.7446s + 4.565e05) (s^2 + 3.135s + 4.823e05) (s^2 + 44.77s + 7.737e05)  
                                                                                        
        (s^2 + 4.772s + 9.86e05) (s^2 + 5.038s + 1.253e06) (s^2 + 6.229s + 1.452e06)    
                                                                                        
        (s^2 + 0.4467s + 4.051e06) (s^2 + 3.78s + 4.476e06) (s^2 + 14.71s + 5.826e06)   
                                                                                        
        (s^2 + 3.089s + 6.863e06) (s^2 + 11.2s + 6.971e06) (s^2 + 12.23s + 6.984e06)    
                                                                                        
        (s^2 + 3.678s + 9.676e06) (s^2 + 5.667s + 1.284e07) (s^2 + 9.541s + 1.526e07)   
                                                                                        
        (s^2 + 2.756s + 1.864e07) (s^2 + 1.997s + 1.88e07) (s^2 + 5.666s + 1.906e07)    
                                                                                        
        (s^2 + 0.8623s + 2.235e07) (s^2 + 1.097s + 2.401e07) (s^2 + 6.22e04s + 1.934e09)
                                                                                        
 
 
Zero/pole/gain:
 
                                                                                        
 1.1135e-15 (s-230.1) (s^2 + 10.43s + 1.256e05) (s^2 - 13.65s + 1.441e05)               
                                                                                        
         (s^2 + 3.738s + 1.71e05) (s^2 - 1.357s + 1.903e05) (s^2 - 1.064s + 2.03e05)    
                                                                                        
         (s^2 + 3.994s + 2.141e05) (s^2 + 5.044s + 2.481e05) (s^2 - 5.982s + 2.508e05)  
                                                                                        
         (s^2 + 1.786s + 2.764e05) (s^2 + 3.74s + 3.359e05) (s^2 + 7.616s + 3.667e05)   
                                                                                        
         (s^2 + 1.135s + 4.608e05) (s^2 + 1.772s + 5.347e05) (s^2 - 0.2736s + 5.955e05) 
                                                                                        
         (s^2 - 0.1546s + 8.975e05) (s^2 - 3.397s + 1.233e06) (s^2 + 6.273s + 1.314e06) 
                                                                                        
         (s^2 + 9.188s + 1.568e06) (s^2 + 4.614s + 1.888e06) (s^2 + 1.601s + 3.049e06)  
                                                                                        
         (s^2 + 0.6047s + 4.146e06) (s^2 + 8.426s + 6.499e06) (s^2 - 31.58s + 6.838e06) 
                                                                                        
         (s^2 + 15.2s + 6.892e06) (s^2 + 2124s + 9.147e06) (s^2 - 1.388s + 1.145e07)    
                                                                                        
         (s^2 + 4.083s + 1.36e07) (s^2 - 5.484s + 1.875e07) (s^2 + 6.275s + 1.889e07)   
                                                                                        
         (s^2 + 3.227s + 1.91e07) (s^2 - 61.28s + 1.963e07) (s^2 + 1.01s + 2.127e07)    
                                                                                        
------------------------------------------------------------------------------------------
                                                                                          
(s^2 + 60.45s + 8.201e04) (s^2 + 4.302s + 1.24e05) (s^2 + 0.5513s + 1.604e05)             
                                                                                          
        (s^2 + 7.755s + 1.721e05) (s^2 + 0.6103s + 1.91e05) (s^2 + 1.655s + 2.024e05)     
                                                                                          
        (s^2 + 5.073s + 2.147e05) (s^2 + 0.07622s + 2.469e05) (s^2 + 0.05968s + 2.522e05) 
                                                                                          
        (s^2 + 0.5402s + 2.747e05) (s^2 + 0.607s + 3.368e05) (s^2 + 5.858s + 3.689e05)    
                                                                                          
        (s^2 + 1.086s + 4.62e05) (s^2 + 3.637s + 5.378e05) (s^2 + 1.332s + 5.968e05)      
                                                                                          
        (s^2 + 0.01084s + 8.967e05) (s^2 + 1.416s + 1.234e06) (s^2 + 3.999s + 1.324e06)   
                                                                                          
        (s^2 + 6.414s + 1.571e06) (s^2 + 3.226s + 1.889e06) (s^2 + 1.32s + 3.042e06)      
                                                                                          
        (s^2 + 0.9767s + 4.137e06) (s^2 + 11.44s + 6.474e06) (s^2 + 0.6427s + 6.864e06)   
                                                                                          
        (s^2 + 3.222s + 6.956e06) (s^2 + 1.225s + 1.145e07) (s^2 + 5.395s + 1.359e07)     
                                                                                          
        (s^2 + 1.948s + 1.876e07) (s^2 + 1.803s + 1.878e07) (s^2 + 3.993s + 1.907e07)     
                                                                                          
        (s^2 + 0.187s + 1.913e07) (s^2 + 0.9312s + 2.126e07) (s^2 + 6.22e04s + 1.934e09)  
                                                                                          
 
RMS errors are displayed below

ans =

   6.8634e-19


ans =

   4.7277e-19

Amount of data to be written
    18874368

        1152

Calculating pre- and post-filter PSD
Elapsed time is 6.521634 seconds.

ans =

    86


ans =

     1


ans =

     1

    'Pre-filter range was 13454.6504 kpc'

    'Post-filter range is 13640.002 kpc'

    'Improvement factor is 1.0138'

{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Comb limit for this window

ans =

    1.2000

Values of combed points

ans =

    1.0067
    0.9947
    1.0088
    0.9766
    0.9768
    0.9853
    0.9801
    0.9729
    0.9789
    0.9816
    0.9695
    0.9984
    0.9856
    0.9994
    1.0026
    0.9922
    0.9978
    0.9981
    0.9882
    0.9918
    0.9981
    0.9994
    1.0031
    0.9993
    1.0036
    1.0047
    0.9987
    1.0039
    1.0032
    0.9991
    1.0010
    1.0005
    1.0025
    0.9989
    0.9991
    1.0012
    1.0000
    0.9999
    0.9998
    0.9999

Maximum should be Boolean

ans =

     0

success (0) or failure (1) of the data in range and comb veto tests:

ans =

     0


ans =

     0

This many frames are being written
     4

HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136512-931136640-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136512-931136640-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136512-931136640-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136640-931136768-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136640-931136768-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136640-931136768-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136768-931136896-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136768-931136896-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136768-931136896-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136896-931137024-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136896-931137024-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931136896-931137024-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
Lengths of passed DARM, MICH and PRC vrctors:
     0

     0

     0

A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931137115

   931137115

   931138139

   931138139

        1024

        1024

   931137627

   931137627

   512

   512

This message will display if the second subsection is doing the correct thing for DARM
Check on DARM

ans =

   1.0e-15 *

    0.1904
    0.1904
    0.1901
    0.1899
    0.1897
    0.1894
    0.1895
    0.1892
    0.1890
    0.1888
    0.1884

Check on new: first three samples should be same as last above

ans =

   1.0e-15 *

    0.1890
    0.1888
    0.1884
    0.1881
    0.1880
    0.1878
    0.1875
    0.1872
    0.1868
    0.1866
    0.1862
    0.1860
    0.1858

This message will display if the second subsection is doing the correct thing for MICH
Check on MICH

ans =

   44.8862
   45.0796
   45.2807
   45.4816
   45.6822
   45.8879
   46.0927
   46.2955
   46.5001
   46.7070
   46.9092

Check on new: first three samples should be same as last above

ans =

   46.5001
   46.7070
   46.9092
   47.1093
   47.3074
   47.5090
   47.7191
   47.9280
   48.1334
   48.3356
   48.5356
   48.7448
   48.9613

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 28,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 35,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 51,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 56,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 6.766877 seconds.
A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931137115

   931137115

   931138139

   931138139

        1024

        1024

   931137627

   931137627

   512

   512

This message will display if the second subsection is doing the correct thing for PRC
Check on PRC

ans =

 -565.4032
 -565.1483
 -564.8724
 -564.5827
 -564.2706
 -563.9333
 -563.6143
 -563.3450
 -563.0863
 -562.7838
 -562.4471

Check on new: first three samples should be same as last above

ans =

 -563.0863
 -562.7838
 -562.4471
 -562.1132
 -561.7902
 -561.4753
 -561.1691
 -560.8746
 -560.5871
 -560.2729
 -559.9089
 -559.5207
 -559.1508

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 29,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 45,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 50,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 7.742759 seconds.
Offline ZPKs displayed below
 
Zero/pole/gain:
 
                                                                                        
-7.4358e-16 (s+796.7) (s^2 + 2.097s + 1.104e05) (s^2 + 6.747s + 1.164e05)               
                                                                                        
        (s^2 - 39.64s + 1.31e05) (s^2 + 11.2s + 1.695e05) (s^2 + 11.6s + 1.934e05)      
                                                                                        
        (s^2 + 8.232s + 2.078e05) (s^2 + 10.92s + 2.26e05) (s^2 + 4.038s + 2.401e05)    
                                                                                        
        (s^2 + 0.7617s + 2.654e05) (s^2 + 0.04281s + 2.943e05) (s^2 - 1.22s + 3.898e05) 
                                                                                        
        (s^2 + 6.387s + 4.123e05) (s^2 + 21.09s + 5.363e05) (s^2 + 7.916s + 6.112e05)   
                                                                                        
        (s^2 + 0.03791s + 9.846e05) (s^2 + 1.045s + 1.26e06) (s^2 + 10.78s + 1.341e06)  
                                                                                        
        (s^2 + 58.84s + 2.991e06) (s^2 - 2287s + 5.143e06) (s^2 + 11.77s + 4.174e06)    
                                                                                        
        (s^2 - 78.16s + 5.439e06) (s^2 - 175.9s + 6.464e06) (s^2 - 1.868s + 6.875e06)   
                                                                                        
        (s^2 + 11.26s + 6.986e06) (s^2 - 0.6524s + 9.189e06) (s^2 + 30.76s + 1.148e07)  
                                                                                        
        (s^2 + 35.75s + 1.466e07) (s^2 + 0.7855s + 1.762e07) (s^2 + 9.052s + 1.87e07)   
                                                                                        
        (s^2 + 41.44s + 1.884e07) (s^2 + 2.154s + 1.907e07) (s^2 + 7.59s + 2.396e07)    
                                                                                        
-----------------------------------------------------------------------------------------
                                                                                         
(s^2 + 1.451s + 1.052e05) (s^2 + 2.744s + 1.16e05) (s^2 + 42.6s + 1.223e05)              
                                                                                         
        (s^2 + 10.85s + 1.511e05) (s^2 + 9.602s + 1.697e05) (s^2 + 9.784s + 1.948e05)    
                                                                                         
        (s^2 + 5.927s + 2.085e05) (s^2 + 7.415s + 2.333e05) (s^2 + 14.19s + 2.451e05)    
                                                                                         
        (s^2 + 1.635s + 2.658e05) (s^2 + 1.665s + 2.957e05) (s^2 + 1.83s + 3.907e05)     
                                                                                         
        (s^2 + 5.593s + 4.114e05) (s^2 + 18.29s + 5.321e05) (s^2 + 7.828s + 6.134e05)    
                                                                                         
        (s^2 + 1.651s + 9.849e05) (s^2 + 8.383s + 1.247e06) (s^2 + 6.217s + 1.331e06)    
                                                                                         
        (s^2 + 40.57s + 3.104e06) (s^2 + 5.751s + 4.207e06) (s^2 + 48.99s + 5.508e06)    
                                                                                         
        (s^2 + 0.4325s + 6.866e06) (s^2 + 11.42s + 6.97e06) (s^2 + 14.68s + 6.993e06)    
                                                                                         
        (s^2 + 1.48s + 9.191e06) (s^2 + 0.7995s + 1.152e07) (s^2 + 8.898s + 1.493e07)    
                                                                                         
        (s^2 + 2.331s + 1.865e07) (s^2 + 1.072s + 1.878e07) (s^2 + 4.574s + 1.899e07)    
                                                                                         
        (s^2 + 0.2502s + 1.907e07) (s^2 + 0.7914s + 2.402e07) (s^2 + 6.22e04s + 1.934e09)
                                                                                         
 
 
Zero/pole/gain:
 
                                                                                       
6.5281e-16 (s+76.66) (s^2 + 18.24s + 1.084e05) (s^2 + 13.23s + 1.135e05)               
                                                                                       
        (s^2 - 57.97s + 1.288e05) (s^2 + 2.342s + 1.717e05) (s^2 - 0.364s + 1.882e05)  
                                                                                       
        (s^2 + 1.039s + 2.049e05) (s^2 + 0.4502s + 2.295e05) (s^2 + 1.444s + 2.454e05) 
                                                                                       
        (s^2 - 3.815s + 2.5e05) (s^2 + 1.866s + 2.99e05) (s^2 + 2.077s + 3.551e05)     
                                                                                       
        (s^2 - 0.268s + 3.949e05) (s^2 + 2.981s + 4.579e05) (s^2 - 8.571s + 5.809e05)  
                                                                                       
        (s^2 + 0.9923s + 6.184e05) (s^2 + 1.643s + 7.561e05) (s^2 + 2.369s + 1.227e06) 
                                                                                       
        (s^2 + 4.119s + 1.327e06) (s^2 + 2.468s + 1.479e06) (s^2 + 5.187s + 1.573e06)  
                                                                                       
        (s^2 + 1.519s + 3.037e06) (s^2 - 0.5194s + 4.044e06) (s^2 + 1.263s + 5.594e06) 
                                                                                       
        (s^2 + 4027s + 1.003e07) (s^2 - 24.93s + 6.792e06) (s^2 + 2.354s + 6.899e06)   
                                                                                       
        (s^2 + 0.7442s + 9.209e06) (s^2 + 2.386s + 1.277e07) (s^2 + 7.491s + 1.884e07) 
                                                                                       
        (s^2 + 23.18s + 1.899e07) (s^2 - 84.4s + 1.912e07) (s^2 + 38.13s + 1.915e07)   
                                                                                       
----------------------------------------------------------------------------------------
                                                                                        
(s^2 + 9.961s + 1.062e05) (s^2 + 24.06s + 1.126e05) (s^2 + 28.3s + 1.237e05)            
                                                                                        
        (s^2 + 2.12s + 1.596e05) (s^2 + 6.442s + 1.735e05) (s^2 + 2.387s + 1.901e05)    
                                                                                        
        (s^2 + 1.529s + 2.073e05) (s^2 + 7.765s + 2.36e05) (s^2 + 0.4766s + 2.464e05)   
                                                                                        
        (s^2 + 0.3657s + 2.521e05) (s^2 + 0.4871s + 2.994e05) (s^2 + 2.463s + 3.575e05) 
                                                                                        
        (s^2 + 1.632s + 3.965e05) (s^2 + 2.546s + 4.619e05) (s^2 + 4.849s + 5.93e05)    
                                                                                        
        (s^2 + 0.6588s + 6.182e05) (s^2 + 0.9415s + 7.571e05) (s^2 + 4.618s + 1.234e06) 
                                                                                        
        (s^2 + 6.411s + 1.328e06) (s^2 + 1.863s + 1.479e06) (s^2 + 3.267s + 1.576e06)   
                                                                                        
        (s^2 + 3.062s + 3.032e06) (s^2 + 5.024s + 4.038e06) (s^2 + 2.127s + 5.588e06)   
                                                                                        
        (s^2 + 0.3629s + 6.867e06) (s^2 + 3.178s + 6.947e06) (s^2 + 1.121s + 9.203e06)  
                                                                                        
        (s^2 + 1.753s + 1.278e07) (s^2 + 9.459s + 1.871e07) (s^2 + 0.3154s + 1.881e07)  
                                                                                        
        (s^2 + 1.536s + 1.909e07) (s^2 + 1.654s + 1.91e07) (s^2 + 6.22e04s + 1.934e09)  
                                                                                        
 
RMS errors are displayed below

ans =

   5.7129e-19


ans =

   4.7114e-19

Amount of data to be written
    18874368

        1152

Calculating pre- and post-filter PSD
Elapsed time is 6.331044 seconds.

ans =

    86


ans =

     1


ans =

     1

    'Pre-filter range was 12935.1365 kpc'

    'Post-filter range is 13120.9541 kpc'

    'Improvement factor is 1.0144'

{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Comb limit for this window

ans =

    1.2000

Values of combed points

ans =

    0.9884
    0.9902
    0.9966
    0.9909
    0.9889
    0.9698
    0.9762
    0.9718
    0.9780
    0.9763
    0.9806
    0.9961
    0.9635
    0.9943
    0.9971
    1.0047
    1.0005
    0.9958
    0.9993
    0.9958
    0.9968
    0.9966
    1.0015
    1.0002
    1.0008
    1.0008
    1.0016
    0.9999
    0.9990
    1.0036
    1.0034
    1.0024
    0.9996
    0.9997
    1.0000
    0.9995
    0.9991
    1.0004
    1.0002
    1.0005

Maximum should be Boolean

ans =

     0

success (0) or failure (1) of the data in range and comb veto tests:

ans =

     0


ans =

     0

This many frames are being written
     4

HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137024-931137152-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137024-931137152-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137024-931137152-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137152-931137280-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137152-931137280-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137152-931137280-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137280-931137408-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137280-931137408-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137280-931137408-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137408-931137536-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137408-931137536-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137408-931137536-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
Lengths of passed DARM, MICH and PRC vrctors:
     0

     0

     0

A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931137627

   931137627

   931138651

   931138651

        1024

        1024

   931138139

   931138139

   512

   512

This message will display if the second subsection is doing the correct thing for DARM
Check on DARM

ans =

   1.0e-15 *

   -0.1745
   -0.1750
   -0.1753
   -0.1758
   -0.1763
   -0.1766
   -0.1769
   -0.1772
   -0.1776
   -0.1779
   -0.1784

Check on new: first three samples should be same as last above

ans =

   1.0e-15 *

   -0.1776
   -0.1779
   -0.1784
   -0.1788
   -0.1789
   -0.1793
   -0.1795
   -0.1799
   -0.1803
   -0.1805
   -0.1808
   -0.1810
   -0.1812

This message will display if the second subsection is doing the correct thing for MICH
Check on MICH

ans =

   41.5204
   41.7805
   42.0298
   42.2883
   42.5529
   42.8053
   43.0511
   43.2982
   43.5545
   43.8160
   44.0714

Check on new: first three samples should be same as last above

ans =

   43.5545
   43.8160
   44.0714
   44.3313
   44.5946
   44.8493
   45.1023
   45.3626
   45.6263
   45.8842
   46.1339
   46.3956
   46.6623

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 27,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 45,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 47,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 64,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 63,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 7.071874 seconds.
A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931137627

   931137627

   931138651

   931138651

        1024

        1024

   931138139

   931138139

   512

   512

This message will display if the second subsection is doing the correct thing for PRC
Check on PRC

ans =

  -64.9594
  -63.8063
  -62.6641
  -61.5364
  -60.4454
  -59.4060
  -58.3973
  -57.3803
  -56.3488
  -55.3285
  -54.3365

Check on new: first three samples should be same as last above

ans =

  -56.3488
  -55.3285
  -54.3365
  -53.3752
  -52.4172
  -51.4272
  -50.4065
  -49.3853
  -48.4109
  -47.4904
  -46.5555
  -45.5676
  -44.5777

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 29,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 45,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 51,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 65,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 7.092970 seconds.
Offline ZPKs displayed below
 
Zero/pole/gain:
 
                                                                                        
 -7.0374e-16 (s+844.8) (s^2 + 6.199s + 1.066e05) (s^2 - 0.3014s + 1.145e05)             
                                                                                        
         (s^2 - 4.542s + 1.594e05) (s^2 + 3.236s + 1.926e05) (s^2 + 1.573s + 2.041e05)  
                                                                                        
         (s^2 + 1.205s + 2.264e05) (s^2 + 0.5861s + 2.436e05) (s^2 + 2.624s + 2.824e05) 
                                                                                        
         (s^2 + 3.722s + 3.388e05) (s^2 + 3.622s + 3.518e05) (s^2 + 2.143s + 4.205e05)  
                                                                                        
         (s^2 + 4.846s + 6.054e05) (s^2 + 14.07s + 7.732e05) (s^2 + 4.05s + 1.241e06)   
                                                                                        
         (s^2 + 9.536s + 1.338e06) (s^2 + 0.2169s + 1.624e06) (s^2 + 11.28s + 2.872e06) 
                                                                                        
         (s^2 + 6.072s + 3.195e06) (s^2 - 659.3s + 4.283e06) (s^2 + 12.29s + 4.278e06)  
                                                                                        
         (s^2 + 256.2s + 6.863e06) (s^2 + 2.543s + 6.896e06) (s^2 - 422.6s + 7.117e06)  
                                                                                        
         (s^2 + 11.5s + 7.178e06) (s^2 + 16.09s + 8.932e06) (s^2 + 16.75s + 1.144e07)   
                                                                                        
         (s^2 + 7.571s + 1.453e07) (s^2 - 6.008s + 1.873e07) (s^2 - 2.325s + 1.882e07)  
                                                                                        
         (s^2 + 0.6199s + 1.924e07) (s^2 + 1570s + 2.159e07) (s^2 - 23.79s + 2.394e07)  
                                                                                        
------------------------------------------------------------------------------------------
                                                                                          
(s^2 + 45.53s + 7.009e04) (s^2 + 1.164s + 1.054e05) (s^2 + 2.777s + 1.15e05)              
                                                                                          
        (s^2 + 1.113s + 1.606e05) (s^2 + 3.048s + 1.918e05) (s^2 + 1.449s + 2.045e05)     
                                                                                          
        (s^2 + 3.463s + 2.275e05) (s^2 + 1.205s + 2.45e05) (s^2 + 0.4057s + 2.826e05)     
                                                                                          
        (s^2 + 0.7162s + 3.389e05) (s^2 + 1.035s + 3.521e05) (s^2 + 1.111s + 4.207e05)    
                                                                                          
        (s^2 + 3.611s + 6.04e05) (s^2 + 14.4s + 7.671e05) (s^2 + 10.64s + 1.239e06)       
                                                                                          
        (s^2 + 7.892s + 1.326e06) (s^2 + 11.81s + 1.624e06) (s^2 + 12.54s + 2.908e06)     
                                                                                          
        (s^2 + 8.594s + 3.18e06) (s^2 + 2.435s + 4.283e06) (s^2 + 1.889s + 4.736e06)      
                                                                                          
        (s^2 + 0.04765s + 6.907e06) (s^2 + 0.3579s + 6.973e06) (s^2 + 0.6344s + 7.245e06) 
                                                                                          
        (s^2 + 6.129s + 8.928e06) (s^2 + 3.903s + 1.154e07) (s^2 + 9.36s + 1.456e07)      
                                                                                          
        (s^2 + 5.171s + 1.863e07) (s^2 + 9.781s + 1.876e07) (s^2 + 5.53s + 1.906e07)      
                                                                                          
        (s^2 + 10.24s + 1.926e07) (s^2 + 1.33s + 2.401e07) (s^2 + 6.22e04s + 1.934e09)    
                                                                                          
 
 
Zero/pole/gain:
 
                                                                                        
5.1535e-16 (s-82.26) (s^2 - 21.23s + 1.03e05) (s^2 - 4.92s + 1.128e05)                  
                                                                                        
        (s^2 - 0.4442s + 1.221e05) (s^2 + 0.8304s + 1.722e05) (s^2 + 4.937s + 1.862e05) 
                                                                                        
        (s^2 + 2.331s + 2.044e05) (s^2 + 15.23s + 2.321e05) (s^2 - 7.56s + 2.487e05)    
                                                                                        
        (s^2 + 2.133s + 2.655e05) (s^2 + 2.185s + 2.94e05) (s^2 + 6.635s + 3.538e05)    
                                                                                        
        (s^2 + 14.48s + 3.725e05) (s^2 + 9.823s + 4.466e05) (s^2 + 0.9303s + 4.687e05)  
                                                                                        
        (s^2 + 10.85s + 5.399e05) (s^2 + 5.034s + 6.651e05) (s^2 + 6.338s + 9.141e05)   
                                                                                        
        (s^2 - 17.66s + 1.324e06) (s^2 + 2.468s + 1.338e06) (s^2 + 4.241s + 1.503e06)   
                                                                                        
        (s^2 + 6.164s + 2.995e06) (s^2 - 1.86s + 3.138e06) (s^2 + 3.22s + 4.283e06)     
                                                                                        
        (s^2 + 5029s + 1.133e07) (s^2 - 33.19s + 6.754e06) (s^2 + 2.944s + 6.918e06)    
                                                                                        
        (s^2 + 0.806s + 8.982e06) (s^2 + 8.012s + 1.272e07) (s^2 + 11.31s + 1.863e07)   
                                                                                        
        (s^2 - 4.448s + 1.887e07) (s^2 + 9.751s + 1.901e07) (s^2 - 66.08s + 1.957e07)   
                                                                                        
----------------------------------------------------------------------------------------
                                                                                       
(s^2 + 6.952s + 1.074e05) (s^2 + 7.271s + 1.142e05) (s^2 + 2.071s + 1.24e05)           
                                                                                       
        (s^2 + 2.249s + 1.572e05) (s^2 + 2.3s + 1.73e05) (s^2 + 5.072s + 1.871e05)     
                                                                                       
        (s^2 + 3.692s + 2.057e05) (s^2 + 3.607s + 2.474e05) (s^2 + 0.4128s + 2.51e05)  
                                                                                       
        (s^2 + 2.193s + 2.658e05) (s^2 + 4.084s + 2.976e05) (s^2 + 4.622s + 3.57e05)   
                                                                                       
        (s^2 + 12.48s + 3.75e05) (s^2 + 8.2s + 4.573e05) (s^2 + 1.666s + 4.69e05)      
                                                                                       
        (s^2 + 19.43s + 5.715e05) (s^2 + 4.59s + 6.665e05) (s^2 + 3.604s + 9.165e05)   
                                                                                       
        (s^2 + 5.538s + 1.312e06) (s^2 + 4.555s + 1.338e06) (s^2 + 3.408s + 1.5e06)    
                                                                                       
        (s^2 + 5.336s + 2.983e06) (s^2 + 2.277s + 3.143e06) (s^2 + 1.333s + 4.268e06)  
                                                                                       
        (s^2 + 0.9672s + 6.872e06) (s^2 + 1.525s + 6.951e06) (s^2 + 1.419s + 8.981e06) 
                                                                                       
        (s^2 + 6.51s + 1.272e07) (s^2 + 1.297s + 1.867e07) (s^2 + 2.515s + 1.882e07)   
                                                                                       
        (s^2 + 8.308s + 1.899e07) (s^2 + 3.895s + 1.907e07) (s^2 + 6.22e04s + 1.934e09)
                                                                                       
 
RMS errors are displayed below

ans =

   5.1794e-19


ans =

   4.7213e-19

Amount of data to be written
    18874368

        1152

Calculating pre- and post-filter PSD
Elapsed time is 6.653446 seconds.

ans =

    86


ans =

     1


ans =

     1

    'Pre-filter range was 12324.9309 kpc'

    'Post-filter range is 12472.665 kpc'

    'Improvement factor is 1.012'

{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Comb limit for this window

ans =

    1.2000

Values of combed points

ans =

    0.9834
    0.9908
    0.9965
    0.9831
    0.9870
    0.9727
    0.9879
    0.9626
    0.9705
    0.9847
    0.9848
    0.9943
    0.9659
    0.9894
    0.9985
    0.9973
    1.0019
    1.0003
    0.9986
    0.9919
    1.0034
    0.9972
    1.0008
    0.9993
    0.9995
    1.0001
    0.9986
    1.0015
    1.0013
    1.0021
    1.0019
    1.0016
    0.9998
    1.0001
    0.9999
    1.0000
    0.9997
    0.9998
    1.0000
    0.9998

Maximum should be Boolean

ans =

     0

success (0) or failure (1) of the data in range and comb veto tests:

ans =

     0


ans =

     0

This many frames are being written
     4

HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137536-931137664-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137536-931137664-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137536-931137664-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137664-931137792-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137664-931137792-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137664-931137792-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137792-931137920-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137792-931137920-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137792-931137920-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137920-931138048-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137920-931138048-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931137920-931138048-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
Lengths of passed DARM, MICH and PRC vrctors:
     0

     0

     0

A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931138139

   931138139

   931139163

   931139163

        1024

        1024

   931138651

   931138651

   512

   512

This message will display if the second subsection is doing the correct thing for DARM
Check on DARM

ans =

   1.0e-15 *

    0.1457
    0.1445
    0.1433
    0.1420
    0.1408
    0.1397
    0.1385
    0.1374
    0.1362
    0.1349
    0.1336

Check on new: first three samples should be same as last above

ans =

   1.0e-15 *

    0.1362
    0.1349
    0.1336
    0.1323
    0.1312
    0.1300
    0.1287
    0.1275
    0.1261
    0.1248
    0.1236
    0.1223
    0.1212

This message will display if the second subsection is doing the correct thing for MICH
Check on MICH

ans =

  142.4638
  142.5577
  142.6448
  142.7385
  142.8395
  142.9296
  143.0197
  143.1097
  143.1973
  143.2888
  143.3652

Check on new: first three samples should be same as last above

ans =

  143.1973
  143.2888
  143.3652
  143.4409
  143.5274
  143.6057
  143.6810
  143.7645
  143.8607
  143.9541
  144.0226
  144.0939
  144.1741

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 27,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 45,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 51,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 6.655722 seconds.
A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931138139

   931138139

   931139163

   931139163

        1024

        1024

   931138651

   931138651

   512

   512

This message will display if the second subsection is doing the correct thing for PRC
Check on PRC

ans =

 -300.2430
 -300.0605
 -299.8865
 -299.7123
 -299.5305
 -299.3210
 -299.1029
 -298.9142
 -298.7358
 -298.5283
 -298.2899

Check on new: first three samples should be same as last above

ans =

 -298.7358
 -298.5283
 -298.2899
 -298.0441
 -297.8211
 -297.6268
 -297.4479
 -297.2982
 -297.1871
 -297.0704
 -296.8829
 -296.6205
 -296.3633

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 27,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 40,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 49,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 56,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 63,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 6.686336 seconds.
Offline ZPKs displayed below
 
Zero/pole/gain:
 
                                                                                        
-7.0067e-16 (s+1123) (s^2 - 0.6812s + 1.076e05) (s^2 - 0.9233s + 1.224e05)              
                                                                                        
        (s^2 + 7.295s + 1.645e05) (s^2 - 3.555s + 1.805e05) (s^2 + 4.953s + 1.905e05)   
                                                                                        
        (s^2 + 1.362s + 2.026e05) (s^2 - 3.021s + 2.26e05) (s^2 - 1.582s + 2.419e05)    
                                                                                        
        (s^2 + 1.932s + 2.902e05) (s^2 + 0.1003s + 3.002e05) (s^2 + 0.1026s + 3.415e05) 
                                                                                        
        (s^2 - 0.07634s + 4.114e05) (s^2 + 5.167s + 4.991e05) (s^2 + 7.822s + 5.976e05) 
                                                                                        
        (s^2 + 6.388s + 8.085e05) (s^2 + 1.558s + 1.33e06) (s^2 + 6.143s + 1.576e06)    
                                                                                        
        (s^2 - 9.812s + 2.259e06) (s^2 - 23.93s + 3.588e06) (s^2 - 961.2s + 4.838e06)   
                                                                                        
        (s^2 - 98.01s + 5.3e06) (s^2 + 10.14s + 6.201e06) (s^2 - 1.066s + 6.931e06)     
                                                                                        
        (s^2 - 173.2s + 7.883e06) (s^2 + 19.22s + 8.316e06) (s^2 + 27.94s + 1.135e07)   
                                                                                        
        (s^2 + 14s + 1.468e07) (s^2 - 95.26s + 1.884e07) (s^2 + 18.57s + 1.887e07)      
                                                                                        
        (s^2 + 436.4s + 1.925e07) (s^2 + 22.97s + 1.997e07) (s^2 + 2.783s + 2.373e07)   
                                                                                        
-----------------------------------------------------------------------------------------
                                                                                         
(s^2 + 109.1s + 9.511e04) (s^2 + 4.666s + 1.054e05) (s^2 + 10.76s + 1.214e05)            
                                                                                         
        (s^2 + 3.805s + 1.639e05) (s^2 + 0.299s + 1.806e05) (s^2 + 1.674s + 1.912e05)    
                                                                                         
        (s^2 + 3.732s + 2.041e05) (s^2 + 0.3941s + 2.266e05) (s^2 + 1.129s + 2.436e05)   
                                                                                         
        (s^2 + 1.354s + 2.911e05) (s^2 + 0.1061s + 3.022e05) (s^2 + 0.08342s + 3.414e05) 
                                                                                         
        (s^2 + 0.3334s + 4.114e05) (s^2 + 5.805s + 4.978e05) (s^2 + 4.674s + 5.978e05)   
                                                                                         
        (s^2 + 7.324s + 8.057e05) (s^2 + 2.497s + 1.324e06) (s^2 + 7.029s + 1.571e06)    
                                                                                         
        (s^2 + 37.46s + 2.325e06) (s^2 + 4.995s + 3.605e06) (s^2 + 0.8773s + 5.11e06)    
                                                                                         
        (s^2 + 8.864s + 6.111e06) (s^2 + 1.906s + 6.933e06) (s^2 + 0.9357s + 6.949e06)   
                                                                                         
        (s^2 + 3.472s + 8.258e06) (s^2 + 5.611s + 1.153e07) (s^2 + 3.689s + 1.475e07)    
                                                                                         
        (s^2 + 5.574s + 1.863e07) (s^2 + 5.499s + 1.882e07) (s^2 + 0.8472s + 1.906e07)   
                                                                                         
        (s^2 + 2.53s + 1.998e07) (s^2 + 1.876s + 2.401e07) (s^2 + 6.22e04s + 1.934e09)   
                                                                                         
 
 
Zero/pole/gain:
 
                                                                                       
6.9197e-16 (s-101.9) (s^2 - 3.366s + 1.086e05) (s^2 + 1.745s + 1.169e05)               
                                                                                       
        (s^2 - 33.88s + 1.248e05) (s^2 - 0.3565s + 1.724e05) (s^2 + 2.989s + 1.829e05) 
                                                                                       
        (s^2 - 3.08s + 2.108e05) (s^2 + 6.872s + 2.357e05) (s^2 - 5.042s + 2.474e05)   
                                                                                       
        (s^2 - 1.326s + 2.736e05) (s^2 + 6.916s + 3.004e05) (s^2 + 1.448s + 4.105e05)  
                                                                                       
        (s^2 - 1.296s + 5.062e05) (s^2 - 0.5123s + 5.332e05) (s^2 + 21.45s + 6.343e05) 
                                                                                       
        (s^2 + 2.918s + 8.581e05) (s^2 - 0.4029s + 1.234e06) (s^2 + 2.13s + 1.313e06)  
                                                                                       
        (s^2 + 24.66s + 1.657e06) (s^2 + 14.71s + 2.346e06) (s^2 - 1.639s + 3.064e06)  
                                                                                       
        (s^2 + 1.74s + 3.972e06) (s^2 + 3971s + 9.814e06) (s^2 - 10.2s + 6.827e06)     
                                                                                       
        (s^2 + 8.969s + 6.934e06) (s^2 + 1.94s + 8.349e06) (s^2 - 7.646s + 1.15e07)    
                                                                                       
        (s^2 + 4.08s + 1.311e07) (s^2 + 6.772s + 1.864e07) (s^2 + 3.645s + 1.903e07)   
                                                                                       
        (s^2 - 3.845s + 1.946e07) (s^2 - 43.49s + 1.956e07) (s^2 + 3.537s + 2.372e07)  
                                                                                       
---------------------------------------------------------------------------------------
                                                                                       
(s^2 + 11.12s + 1.011e05) (s^2 + 4.791s + 1.124e05) (s^2 + 7.137s + 1.217e05)          
                                                                                       
        (s^2 + 1.749s + 1.579e05) (s^2 + 0.6422s + 1.729e05) (s^2 + 3.837s + 1.847e05) 
                                                                                       
        (s^2 + 1.276s + 2.144e05) (s^2 + 1.657s + 2.471e05) (s^2 + 1.039s + 2.51e05)   
                                                                                       
        (s^2 + 0.9258s + 2.742e05) (s^2 + 9.561s + 3.039e05) (s^2 + 2.202s + 4.11e05)  
                                                                                       
        (s^2 + 2.61s + 5.071e05) (s^2 + 1.729s + 5.344e05) (s^2 + 12.03s + 6.386e05)   
                                                                                       
        (s^2 + 2.728s + 8.564e05) (s^2 + 1.353s + 1.227e06) (s^2 + 4.25s + 1.323e06)   
                                                                                       
        (s^2 + 14.25s + 1.653e06) (s^2 + 9.878s + 2.345e06) (s^2 + 3.956s + 3.045e06)  
                                                                                       
        (s^2 + 6.26s + 3.961e06) (s^2 + 1.693s + 6.869e06) (s^2 + 2.337s + 6.963e06)   
                                                                                       
        (s^2 + 2.133s + 8.35e06) (s^2 + 0.5314s + 1.15e07) (s^2 + 4.484s + 1.311e07)   
                                                                                       
        (s^2 + 1.189s + 1.863e07) (s^2 + 4.5s + 1.9e07) (s^2 + 3.442s + 1.907e07)      
                                                                                       
        (s^2 + 2.831s + 1.946e07) (s^2 + 2.26s + 2.373e07) (s^2 + 6.22e04s + 1.934e09) 
                                                                                       
 
RMS errors are displayed below

ans =

   5.3337e-19


ans =

   4.6812e-19

Amount of data to be written
    18874368

        1152

Calculating pre- and post-filter PSD
Elapsed time is 8.278250 seconds.

ans =

    86


ans =

     1


ans =

     1

    'Pre-filter range was 13281.1079 kpc'

    'Post-filter range is 13523.0467 kpc'

    'Improvement factor is 1.0182'

{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Comb limit for this window

ans =

    1.2000

Values of combed points

ans =

    0.9964
    0.9847
    0.9952
    0.9900
    0.9829
    0.9695
    0.9594
    0.9556
    0.9584
    0.9622
    0.9650
    0.9810
    0.9920
    0.9962
    1.0009
    0.9950
    1.0038
    0.9994
    1.0035
    0.9888
    0.9983
    1.0017
    1.0017
    1.0032
    1.0005
    1.0032
    1.0008
    1.0030
    0.9991
    1.0030
    1.0015
    1.0011
    1.0004
    1.0000
    1.0000
    0.9996
    1.0001
    0.9998
    1.0002
    1.0001

Maximum should be Boolean

ans =

     0

success (0) or failure (1) of the data in range and comb veto tests:

ans =

     0


ans =

     0

This many frames are being written
     4

HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138048-931138176-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138048-931138176-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138048-931138176-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138176-931138304-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138176-931138304-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138176-931138304-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138304-931138432-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138304-931138432-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138304-931138432-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138432-931138560-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138432-931138560-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138432-931138560-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
Lengths of passed DARM, MICH and PRC vrctors:
     0

     0

     0

A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931138651

   931138651

   931139675

   931139675

        1024

        1024

   931139163

   931139163

   512

   512

This message will display if the second subsection is doing the correct thing for DARM
Check on DARM

ans =

   1.0e-15 *

   -0.3205
   -0.3211
   -0.3217
   -0.3223
   -0.3229
   -0.3234
   -0.3239
   -0.3243
   -0.3248
   -0.3253
   -0.3257

Check on new: first three samples should be same as last above

ans =

   1.0e-15 *

   -0.3248
   -0.3253
   -0.3257
   -0.3262
   -0.3267
   -0.3270
   -0.3275
   -0.3278
   -0.3282
   -0.3287
   -0.3290
   -0.3292
   -0.3296

This message will display if the second subsection is doing the correct thing for MICH
Check on MICH

ans =

   75.0618
   75.0616
   75.0691
   75.0738
   75.0776
   75.0846
   75.0918
   75.1003
   75.0949
   75.0902
   75.0908

Check on new: first three samples should be same as last above

ans =

   75.0949
   75.0902
   75.0908
   75.0932
   75.1003
   75.1088
   75.1108
   75.1109
   75.1141
   75.1186
   75.1309
   75.1409
   75.1463

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 26,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 32,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 51,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 59,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 6.784623 seconds.
A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931138651

   931138651

   931139675

   931139675

        1024

        1024

   931139163

   931139163

   512

   512

This message will display if the second subsection is doing the correct thing for PRC
Check on PRC

ans =

 -266.3654
 -268.7489
 -271.1190
 -273.5099
 -275.8934
 -278.2235
 -280.5229
 -282.8741
 -285.3036
 -287.7433
 -290.1204

Check on new: first three samples should be same as last above

ans =

 -285.3036
 -287.7433
 -290.1204
 -292.4231
 -294.7036
 -297.0305
 -299.4220
 -301.8404
 -304.2510
 -306.6536
 -309.0568
 -311.4630
 -313.8535

darm is this long

ans =

    16777216

vnoise is this long

ans =

    16777216

vector fitting...
{Warning: Rank deficient, rank = 30,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 45,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 49,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 64,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 64,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 8.400347 seconds.
Offline ZPKs displayed below
 
Zero/pole/gain:
 
                                                                                       
-3.7503e-16 (s+723.2) (s^2 + 7.446s + 1.059e05) (s^2 + 4.65s + 1.171e05)               
                                                                                       
        (s^2 - 10.16s + 1.248e05) (s^2 + 1.947s + 1.668e05) (s^2 + 1.1s + 1.792e05)    
                                                                                       
        (s^2 + 0.9876s + 1.882e05) (s^2 + 2.771s + 2.242e05) (s^2 + 3.652s + 2.487e05) 
                                                                                       
        (s^2 + 5.307s + 3.018e05) (s^2 - 0.3616s + 3.584e05) (s^2 + 16.29s + 4.401e05) 
                                                                                       
        (s^2 - 0.000458s + 4.47e05) (s^2 + 7.596s + 5.358e05) (s^2 + 12.13s + 5.94e05) 
                                                                                       
        (s^2 + 5.465s + 1.277e06) (s^2 - 1.412s + 1.376e06) (s^2 + 3.54s + 3.115e06)   
                                                                                       
        (s^2 + 9.212s + 4.258e06) (s^2 - 2589s + 6.661e06) (s^2 - 12.38s + 4.998e06)   
                                                                                       
        (s^2 + 11.09s + 5.891e06) (s^2 + 1.436s + 6.833e06) (s^2 - 212s + 6.895e06)    
                                                                                       
        (s^2 + 3.452s + 6.937e06) (s^2 + 6.063s + 9.826e06) (s^2 + 35.59s + 1.15e07)   
                                                                                       
        (s^2 + 30.26s + 1.692e07) (s^2 - 23.92s + 1.882e07) (s^2 - 9.845s + 1.909e07)  
                                                                                       
        (s^2 + 1163s + 2.361e07) (s^2 - 30.89s + 2.386e07) (s^2 + 24.93s + 2.389e07)   
                                                                                       
---------------------------------------------------------------------------------------
                                                                                       
(s^2 + 1.222s + 1.007e05) (s^2 + 6.18s + 1.157e05) (s^2 + 19.78s + 1.19e05)            
                                                                                       
        (s^2 + 30.65s + 1.567e05) (s^2 + 3.993s + 1.657e05) (s^2 + 5.533s + 1.803e05)  
                                                                                       
        (s^2 + 2.611s + 1.89e05) (s^2 + 3.493s + 2.261e05) (s^2 + 2.071s + 2.49e05)    
                                                                                       
        (s^2 + 3.568s + 3.039e05) (s^2 + 1.929s + 3.597e05) (s^2 + 7.541s + 4.399e05)  
                                                                                       
        (s^2 + 1.62s + 4.486e05) (s^2 + 7.782s + 5.372e05) (s^2 + 6.272s + 5.959e05)   
                                                                                       
        (s^2 + 20.81s + 1.309e06) (s^2 + 26.75s + 1.334e06) (s^2 + 3.334s + 3.109e06)  
                                                                                       
        (s^2 + 3.668s + 4.237e06) (s^2 + 5.666s + 4.548e06) (s^2 + 0.799s + 5.891e06)  
                                                                                       
        (s^2 + 1.023s + 6.863e06) (s^2 + 4.726s + 6.925e06) (s^2 + 5.013s + 6.96e06)   
                                                                                       
        (s^2 + 1.874s + 9.856e06) (s^2 + 4.541s + 1.156e07) (s^2 + 8.425s + 1.702e07)  
                                                                                       
        (s^2 + 6.736s + 1.865e07) (s^2 + 2.624s + 1.909e07) (s^2 + 2.523s + 1.909e07)  
                                                                                       
        (s^2 + 0.6341s + 2.381e07) (s^2 + 1.02s + 2.402e07) (s^2 + 6.22e04s + 1.934e09)
                                                                                       
 
 
Zero/pole/gain:
 
                                                                                        
8.633e-16 (s-190.3) (s^2 - 0.139s + 1.07e05) (s^2 + 14.15s + 1.199e05)                  
                                                                                        
        (s^2 - 21.69s + 1.402e05) (s^2 + 1.443s + 1.717e05) (s^2 - 2.296s + 2.05e05)    
                                                                                        
        (s^2 + 2.816s + 2.109e05) (s^2 + 27.76s + 2.291e05) (s^2 - 0.7631s + 2.49e05)   
                                                                                        
        (s^2 + 0.2253s + 2.726e05) (s^2 + 5.743s + 3.256e05) (s^2 + 3.767s + 3.556e05)  
                                                                                        
        (s^2 + 4.774s + 4.593e05) (s^2 + 1.541s + 5.358e05) (s^2 - 0.7675s + 5.84e05)   
                                                                                        
        (s^2 + 7.629s + 6.618e05) (s^2 + 3.016s + 9.814e05) (s^2 - 5.402s + 1.232e06)   
                                                                                        
        (s^2 + 10.51s + 1.32e06) (s^2 + 5.843s + 1.543e06) (s^2 + 0.7837s + 1.724e06)   
                                                                                        
        (s^2 + 0.4048s + 3.059e06) (s^2 + 4.741s + 3.869e06) (s^2 + 0.4269s + 4.202e06) 
                                                                                        
        (s^2 - 15.78s + 6.877e06) (s^2 + 8.622s + 6.986e06) (s^2 + 3089s + 9.916e06)    
                                                                                        
        (s^2 + 2.143s + 8.871e06) (s^2 + 0.5919s + 1.159e07) (s^2 - 1.762s + 1.864e07)  
                                                                                        
        (s^2 + 2.376s + 1.902e07) (s^2 - 91.94s + 1.973e07) (s^2 + 3.398s + 2.383e07)   
                                                                                        
-----------------------------------------------------------------------------------------
                                                                                         
(s^2 + 4.68s + 9.251e04) (s^2 + 3.5s + 1.062e05) (s^2 + 2.259s + 1.218e05)               
                                                                                         
        (s^2 + 0.3495s + 1.601e05) (s^2 + 4.448s + 1.72e05) (s^2 + 0.1719s + 2.028e05)   
                                                                                         
        (s^2 + 0.369s + 2.142e05) (s^2 + 3.58s + 2.48e05) (s^2 + 5.121s + 2.503e05)      
                                                                                         
        (s^2 + 0.9275s + 2.726e05) (s^2 + 7.367s + 3.272e05) (s^2 + 2.163s + 3.55e05)    
                                                                                         
        (s^2 + 3.067s + 4.589e05) (s^2 + 2.146s + 5.403e05) (s^2 + 6.44s + 5.957e05)     
                                                                                         
        (s^2 + 7.587s + 6.616e05) (s^2 + 2.691s + 9.847e05) (s^2 + 2.754s + 1.233e06)    
                                                                                         
        (s^2 + 3.441s + 1.327e06) (s^2 + 6.647s + 1.545e06) (s^2 + 0.5724s + 1.724e06)   
                                                                                         
        (s^2 + 4.214s + 3.043e06) (s^2 + 3.31s + 3.868e06) (s^2 + 10.55s + 4.192e06)     
                                                                                         
        (s^2 + 2.049s + 6.917e06) (s^2 + 1.405s + 6.974e06) (s^2 + 5.78s + 8.872e06)     
                                                                                         
        (s^2 + 0.2661s + 1.159e07) (s^2 + 0.02697s + 1.863e07) (s^2 + 7.849s + 1.902e07) 
                                                                                         
        (s^2 + 5.112s + 1.907e07) (s^2 + 5.478s + 2.384e07) (s^2 + 6.22e04s + 1.934e09)  
                                                                                         
 
RMS errors are displayed below

ans =

   5.1683e-19


ans =

   4.6381e-19

Amount of data to be written
    18874368

        1152

Calculating pre- and post-filter PSD
Elapsed time is 7.037414 seconds.

ans =

    86


ans =

     1


ans =

     1

    'Pre-filter range was 13411.4538 kpc'

    'Post-filter range is 13604.3241 kpc'

    'Improvement factor is 1.0144'

{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Comb limit for this window

ans =

    1.2000

Values of combed points

ans =

    0.9932
    1.0012
    0.9975
    0.9797
    0.9926
    0.9879
    0.9767
    0.9762
    0.9668
    0.9739
    0.9679
    0.9638
    0.9896
    0.9965
    0.9939
    0.9936
    0.9934
    0.9963
    0.9910
    1.0059
    0.9968
    1.0010
    0.9968
    0.9969
    1.0004
    0.9999
    1.0019
    1.0038
    0.9991
    0.9981
    1.0015
    0.9997
    1.0011
    1.0007
    1.0002
    0.9995
    1.0001
    1.0003
    0.9997
    0.9996

Maximum should be Boolean

ans =

     0

success (0) or failure (1) of the data in range and comb veto tests:

ans =

     0


ans =

     0

This many frames are being written
     4

HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138560-931138688-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138560-931138688-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138560-931138688-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138688-931138816-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138688-931138816-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138688-931138816-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138816-931138944-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138816-931138944-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138816-931138944-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138944-931139072-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138944-931139072-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931138944-931139072-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
Lengths of passed DARM, MICH and PRC vrctors:
     0

     0

     0

A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931139163

   931139163

   931139711

   931139711

   548

   548

   931139675

   931139675

    36

    36

This message will display if the second subsection is doing the correct thing for DARM
Check on DARM

ans =

   1.0e-15 *

    0.1530
    0.1515
    0.1498
    0.1482
    0.1465
    0.1449
    0.1435
    0.1420
    0.1403
    0.1386
    0.1369

Check on new: first three samples should be same as last above

ans =

   1.0e-15 *

    0.1403
    0.1386
    0.1369
    0.1352
    0.1337
    0.1322
    0.1305
    0.1289
    0.1271
    0.1254
    0.1238
    0.1222
    0.1207

This message will display if the second subsection is doing the correct thing for MICH
Check on MICH

ans =

   95.4625
   95.5079
   95.5568
   95.6088
   95.6647
   95.7127
   95.7540
   95.8005
   95.8563
   95.9109
   95.9563

Check on new: first three samples should be same as last above

ans =

   95.8563
   95.9109
   95.9563
   95.9979
   96.0448
   96.0929
   96.1321
   96.1698
   96.2165
   96.2626
   96.3035
   96.3461
   96.3910

darm is this long

ans =

     8978432

vnoise is this long

ans =

     8978432

vector fitting...
{Warning: Rank deficient, rank = 30,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 45,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 47,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 62,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 64,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 3.448426 seconds.
A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931139163

   931139163

   931139711

   931139711

   548

   548

   931139675

   931139675

    36

    36

This message will display if the second subsection is doing the correct thing for PRC
Check on PRC

ans =

 -280.9922
 -282.0663
 -283.1102
 -284.1391
 -285.2025
 -286.3181
 -287.4275
 -288.4717
 -289.4628
 -290.4592
 -291.5014

Check on new: first three samples should be same as last above

ans =

 -289.4628
 -290.4592
 -291.5014
 -292.5772
 -293.6672
 -294.7848
 -295.9191
 -297.0254
 -298.0982
 -299.1825
 -300.3089
 -301.4554
 -302.5743

darm is this long

ans =

     8978432

vnoise is this long

ans =

     8978432

vector fitting...
{Warning: Rank deficient, rank = 32,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 45,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 50,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 61,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 63,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 3.731605 seconds.
Offline ZPKs displayed below
 
Zero/pole/gain:
0
 
 
Zero/pole/gain:
0
 
RMS errors are displayed below

ans =

   1.1127e-16


ans =

   7.6638e-17

Amount of data to be written
    10485760

   640

Calculating pre- and post-filter PSD
Elapsed time is 7.527298 seconds.

ans =

    86


ans =

     1


ans =

     1

    'Pre-filter range was 12982.9757 kpc'

    'Post-filter range is 13115.0267 kpc'

    'Improvement factor is 1.0102'

{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 375
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Comb limit for this window

ans =

    1.2000

Values of combed points

ans =

    0.9956
    0.9838
    0.9823
    0.9968
    0.9882
    0.9945
    1.0016
    0.9841
    0.9835
    0.9697
    0.9917
    1.0037
    0.9855
    0.9942
    1.0002
    1.0030
    1.0029
    0.9904
    0.9972
    0.9953
    1.0024
    1.0004
    0.9949
    0.9970
    1.0028
    1.0006
    1.0013
    1.0008
    1.0023
    1.0028
    0.9993
    1.0013
    1.0012
    0.9994
    1.0000
    0.9999
    1.0001
    0.9998
    1.0003
    0.9997

Maximum should be Boolean

ans =

     0

success (0) or failure (1) of the data in range and comb veto tests:

ans =

     0


ans =

     0

This many frames are being written
     4

HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931139072-931139200-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931139072-931139200-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931139072-931139200-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931139200-931139328-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931139200-931139328-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931139200-931139328-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931139328-931139456-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931139328-931139456-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931139328-931139456-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931139456-931139584-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931139456-931139584-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931139456-931139584-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
Lengths of passed DARM, MICH and PRC vrctors:
     0

     0

     0

A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931139675

   931139675

   931139711

   931139712

    36

    37

   931140187

   931140187

  -476

  -475

darm is this long

ans =

      589824

vnoise is this long

ans =

      589824

vector fitting...
{Warning: Rank deficient, rank = 29,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 45,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 48,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 63,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 64,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopMICH at 295
  In eleutheria>windower at 69
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
       16384

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 0.253373 seconds.
Preparing to attach dangling frame after segment
A list of relevant variables: t1, tau1, t2, tau2, duration, durationPlus, t1+512, tau1+512, duration-512, durationPlus-512
   931139675

   931139675

   931139711

   931139711

    36

    36

   931140187

   931140187

  -476

  -476

darm is this long

ans =

      589824

vnoise is this long

ans =

      589824

vector fitting...
{Warning: Rank deficient, rank = 31,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 91
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 44,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 50,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 60,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Rank deficient, rank = 62,  tol =    2.4198e-12.} 
> In vectfit4 at 629
  In Fitting>Fitting.Fitting at 95
  In Feedforward>Feedforward.Feedforward at 33
  In aletheia at 18
  In HoftEditor>HoftEditor.loopPRC at 320
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Done.
Resulting state space model produced (see offlinezpks.mat)
frame tail length
     0

Filtering (offline)!
Exporting baseline to check filter improvement
Elapsed time is 0.354944 seconds.
Offline ZPKs displayed below
 
Zero/pole/gain:
0
 
 
Zero/pole/gain:
0
 
RMS errors are displayed below

ans =

   1.1436e-16


ans =

   1.0104e-16

Continuing to attach dangling frame after segment
Amount of data to be written
     2097152

   128

Calculating pre- and post-filter PSD
Elapsed time is 0.306507 seconds.

ans =

    86


ans =

     1


ans =

     1

    'Pre-filter range was 14249.2371 kpc'

    'Post-filter range is 14279.4098 kpc'

    'Improvement factor is 1.0021'


ans =

    43


ans =

    50


ans =

     1


ans =

     1


ans =

     1


ans =

     1


ans =

     1


ans =

     1


ans =

     1


ans =

     1


ans =

     1


ans =

     1


ans =

     1

{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 377
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
{Warning: Imaginary parts of complex X and/or Y arguments ignored} 
> In HoftEditor>HoftEditor.frameWriter at 843
  In HoftEditor>HoftEditor.dataReviewer at 385
  In HoftEditor>HoftEditor.loopPRC at 377
  In eleutheria>windower at 70
  In eleutheria>filterer at 94
  In eleutheria at 104
Comb limit for this window

ans =

    4.5255

Values of combed points

ans =

    0.9989
    1.0007
    1.0023
    0.9923
    0.9955
    1.0011
    0.9880
    0.9873
    0.9828
    0.9945
    0.9996
    1.0022
    0.9925
    0.9949
    0.9962
    1.0006
    1.0020
    1.0028
    1.0013
    0.9964
    1.0045
    0.9978
    0.9986
    1.0000
    0.9996
    0.9970
    1.0000
    1.0011
    1.0013
    1.0004
    0.9991
    1.0007
    1.0000
    1.0001
    1.0007
    1.0002
    0.9999
    1.0002
    0.9999
    1.0000

Maximum should be Boolean

ans =

     0

success (0) or failure (1) of the data in range and comb veto tests:

ans =

     0


ans =

     0

This many frames are being written
     1

HoftSub.data is this long

ans =

     2097152

MKFRAME: Create new frame file
MKFRAME: Add Channel H1:AMPS-STRAIN to new frame
MKFRAME: Write out new frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931139584-931139712-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
stateVectorSub.data is this long

ans =

        2048

MKFRAME: Append Channel H1:AMPS-SV_STATE_VECTOR to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931139584-931139712-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
dqFlagSub.data is this long

ans =

   128

MKFRAME: Append Channel H1:AMPS-DATA_QUALITY_FLAG to existing frame
MKFRAME: Write out updated frame file /home/gmeadors/public_html/feedforward/data/H-H1_AMPS_C02_L2-9311/H-H1_AMPS_C02_L2-931139584-931139712-128.gwf
MKFRAME: Write EOF 
MKFRAME: Complete frame file writing
Science segment feedforward complete
Elapsed time is 12.028049 seconds.
